;; Object sequence/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "sequence/"
  :tables
  (list
    (semanticdb-table "comparison.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("FUSION_SEQUENCE_COMPARISON_10022005_0615" variable (:constant-flag t) nil [425 465])
            ("boost/fusion/support/config.hpp" include (:system-flag t) nil [467 509])
            ("boost/fusion/sequence/comparison/equal_to.hpp" include (:system-flag t) nil [510 566])
            ("boost/fusion/sequence/comparison/greater.hpp" include (:system-flag t) nil [567 622])
            ("boost/fusion/sequence/comparison/greater_equal.hpp" include (:system-flag t) nil [623 684])
            ("boost/fusion/sequence/comparison/less.hpp" include (:system-flag t) nil [685 737])
            ("boost/fusion/sequence/comparison/less_equal.hpp" include (:system-flag t) nil [738 796])
            ("boost/fusion/sequence/comparison/not_equal_to.hpp" include (:system-flag t) nil [797 857]))          
      :file "comparison.hpp"
      :pointmax 866
      :fsize 865
      :lastmodtime '(22070 2373 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("FUSION_SEQUENCE_COMPARISON_10022005_0615")
          )
)
    (semanticdb-table "io.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("FUSION_SEQUENCE_IO_10032005_0836" variable (:constant-flag t) nil [417 449])
            ("boost/fusion/support/config.hpp" include (:system-flag t) nil [451 493])
            ("boost/fusion/sequence/io/in.hpp" include (:system-flag t) nil [494 536])
            ("boost/fusion/sequence/io/out.hpp" include (:system-flag t) nil [537 580]))          
      :file "io.hpp"
      :pointmax 589
      :fsize 588
      :lastmodtime '(22070 2373 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("FUSION_SEQUENCE_IO_10032005_0836")
          )
)
    (semanticdb-table "intrinsic_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_FUSION_SEQUENCE_INTRINSIC_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [432 480])
            ("boost/fusion/support/config.hpp" include (:system-flag t) nil [482 524])
            ("boost/type_traits/is_const.hpp" include (:system-flag t) nil [525 566])
            ("boost/utility/enable_if.hpp" include (:system-flag t) nil [567 605])
            ("boost/fusion/support/is_sequence.hpp" include (:system-flag t) nil [606 653])
            ("boost" type
               (:members 
                  ( ("fusion" type
                       (:members 
                          ( ("extension" type
                               (:members 
                                  ( ("at_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [730 777])
                                    ("begin_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [787 837])
                                    ("empty_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [847 897])
                                    ("end_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [907 955])
                                    ("has_key_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [965 1017])
                                    ("segments_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1027 1080])
                                    ("size_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1090 1139])
                                    ("value_at_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1149 1202])
                                    ("at_key_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1212 1263])
                                    ("value_at_key_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1273 1330]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [696 1336])
                            ("result_of" type
                               (:members 
                                  ( ("at" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil)
                                            ("N" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1376 1435])
                                    ("at_c" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil)
                                            ("int" type nil nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1445 1501])
                                    ("back" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1511 1560])
                                    ("begin" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1570 1620])
                                    ("empty" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1630 1680])
                                    ("end" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1690 1738])
                                    ("front" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1748 1798])
                                    ("has_key" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil)
                                            ("Key" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1808 1874])
                                    ("segments" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1884 1937])
                                    ("size" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1947 1996])
                                    ("value_at" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil)
                                            ("N" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [2006 2071])
                                    ("value_at_c" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil)
                                            ("int" type nil nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [2081 2143])
                                    ("at_key" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil)
                                            ("Key" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [2153 2218])
                                    ("value_at_key" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil)
                                            ("N" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [2228 2297]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1342 2303])
                            ("at" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2527 2541]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2515 2542])
                            ("at" function
                               (:prototype-flag t
                                :typemodifiers ("typename")
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2693 2713]))                                  
                                :type ("result_of::at::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2638 2714])
                            ("at_c" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2937 2951]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2923 2952])
                            ("at_c" function
                               (:prototype-flag t
                                :typemodifiers ("typename")
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3102 3122]))                                  
                                :type ("result_of::at_c::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3043 3123])
                            ("back" function
                               (:prototype-flag t
                                :typemodifiers ("typename")
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3257 3271]))                                  
                                :type ("result_of::back::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3207 3272])
                            ("back" function
                               (:prototype-flag t
                                :typemodifiers ("typename")
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3412 3432]))                                  
                                :type ("result_of::back::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3356 3433])
                            ("begin" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3663 3677]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3642 3678])
                            ("begin" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3914 3934]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3893 3935])
                            ("empty" function
                               (:prototype-flag t
                                :typemodifiers ("typename")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4071 4087]))                                  
                                :type ("result_of::empty::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4019 4088])
                            ("end" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4314 4328]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4295 4329])
                            ("end" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4561 4581]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4542 4582])
                            ("front" function
                               (:prototype-flag t
                                :typemodifiers ("typename")
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4718 4732]))                                  
                                :type ("result_of::front::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4666 4733])
                            ("front" function
                               (:prototype-flag t
                                :typemodifiers ("typename")
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4875 4895]))                                  
                                :type ("result_of::front::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4817 4896])
                            ("has_key" function
                               (:prototype-flag t
                                :typemodifiers ("typename")
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5055 5075]))                                  
                                :type ("result_of::has_key::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4994 5076])
                            ("segments" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5296 5310]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5278 5311])
                            ("segments" function
                               (:prototype-flag t
                                :typemodifiers ("typename")
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5459 5479]))                                  
                                :type ("result_of::segments::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5395 5480])
                            ("size" function
                               (:prototype-flag t
                                :typemodifiers ("typename")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5614 5630]))                                  
                                :type ("result_of::size::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5564 5631])
                            ("at_key" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5867 5881]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5851 5882])
                            ("at_key" function
                               (:prototype-flag t
                                :typemodifiers ("typename")
                                :arguments 
                                  ( ("seq" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6045 6065]))                                  
                                :type ("result_of::at_key::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5980 6066]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [673 6068]))                  
                :type "namespace")
                nil [655 6069]))          
      :file "intrinsic_fwd.hpp"
      :pointmax 6078
      :fsize 6077
      :lastmodtime '(22070 2373 0 0)
      :unmatched-syntax '((symbol 5951 . 5975) (symbol 5935 . 5950) (punctuation 5929 . 5930) (symbol 5921 . 5929) (TYPENAME 5912 . 5920) (punctuation 5910 . 5911) (symbol 5907 . 5910) (TYPENAME 5898 . 5906) (punctuation 5897 . 5898) (TEMPLATE 5888 . 5896) (punctuation 5850 . 5851) (punctuation 5849 . 5850) (punctuation 5848 . 5849) (punctuation 5838 . 5839) (symbol 5835 . 5838) (punctuation 5833 . 5834) (symbol 5825 . 5833) (punctuation 5824 . 5825) (symbol 5818 . 5824) (punctuation 5817 . 5818) (punctuation 5816 . 5817) (symbol 5807 . 5816) (punctuation 5805 . 5806) (punctuation 5793 . 5794) (symbol 5785 . 5793) (punctuation 5784 . 5785) (symbol 5776 . 5784) (punctuation 5762 . 5763) (symbol 5747 . 5762) (TYPENAME 5729 . 5737) (symbol 5700 . 5724) (symbol 5684 . 5699) (punctuation 5678 . 5679) (symbol 5670 . 5678) (TYPENAME 5661 . 5669) (punctuation 5659 . 5660) (symbol 5656 . 5659) (TYPENAME 5647 . 5655) (punctuation 5646 . 5647) (TEMPLATE 5637 . 5645) (symbol 5535 . 5559) (symbol 5519 . 5534) (punctuation 5513 . 5514) (symbol 5505 . 5513) (TYPENAME 5496 . 5504) (punctuation 5495 . 5496) (TEMPLATE 5486 . 5494) (symbol 5366 . 5390) (symbol 5350 . 5365) (punctuation 5344 . 5345) (symbol 5336 . 5344) (TYPENAME 5327 . 5335) (punctuation 5326 . 5327) (TEMPLATE 5317 . 5325) (punctuation 5277 . 5278) (punctuation 5276 . 5277) (punctuation 5275 . 5276) (punctuation 5265 . 5266) (symbol 5257 . 5265) (punctuation 5256 . 5257) (symbol 5248 . 5256) (punctuation 5247 . 5248) (punctuation 5246 . 5247) (symbol 5237 . 5246) (punctuation 5235 . 5236) (punctuation 5223 . 5224) (symbol 5215 . 5223) (punctuation 5214 . 5215) (symbol 5206 . 5214) (punctuation 5192 . 5193) (symbol 5177 . 5192) (TYPENAME 5160 . 5168) (symbol 5131 . 5155) (symbol 5115 . 5130) (punctuation 5109 . 5110) (symbol 5101 . 5109) (TYPENAME 5092 . 5100) (punctuation 5091 . 5092) (TEMPLATE 5082 . 5090) (symbol 4965 . 4989) (symbol 4949 . 4964) (punctuation 4943 . 4944) (symbol 4935 . 4943) (TYPENAME 4926 . 4934) (punctuation 4924 . 4925) (symbol 4921 . 4924) (TYPENAME 4912 . 4920) (punctuation 4911 . 4912) (TEMPLATE 4902 . 4910) (symbol 4788 . 4812) (symbol 4772 . 4787) (punctuation 4766 . 4767) (symbol 4758 . 4766) (TYPENAME 4749 . 4757) (punctuation 4748 . 4749) (TEMPLATE 4739 . 4747) (symbol 4637 . 4661) (symbol 4621 . 4636) (punctuation 4615 . 4616) (symbol 4607 . 4615) (TYPENAME 4598 . 4606) (punctuation 4597 . 4598) (TEMPLATE 4588 . 4596) (punctuation 4541 . 4542) (punctuation 4540 . 4541) (punctuation 4539 . 4540) (punctuation 4529 . 4530) (CONST 4524 . 4529) (symbol 4515 . 4523) (punctuation 4514 . 4515) (symbol 4511 . 4514) (punctuation 4510 . 4511) (punctuation 4509 . 4510) (symbol 4500 . 4509) (punctuation 4498 . 4499) (punctuation 4486 . 4487) (symbol 4478 . 4486) (punctuation 4477 . 4478) (symbol 4466 . 4477) (punctuation 4465 . 4466) (punctuation 4464 . 4465) (symbol 4458 . 4464) (punctuation 4444 . 4445) (symbol 4430 . 4444) (TYPENAME 4413 . 4421) (symbol 4384 . 4408) (symbol 4368 . 4383) (punctuation 4362 . 4363) (symbol 4354 . 4362) (TYPENAME 4345 . 4353) (punctuation 4344 . 4345) (TEMPLATE 4335 . 4343) (punctuation 4294 . 4295) (punctuation 4293 . 4294) (punctuation 4292 . 4293) (punctuation 4282 . 4283) (symbol 4274 . 4282) (punctuation 4273 . 4274) (symbol 4270 . 4273) (punctuation 4269 . 4270) (punctuation 4268 . 4269) (symbol 4259 . 4268) (punctuation 4257 . 4258) (punctuation 4245 . 4246) (symbol 4237 . 4245) (punctuation 4236 . 4237) (symbol 4225 . 4236) (punctuation 4224 . 4225) (punctuation 4223 . 4224) (symbol 4217 . 4223) (punctuation 4203 . 4204) (symbol 4189 . 4203) (TYPENAME 4172 . 4180) (symbol 4143 . 4167) (symbol 4127 . 4142) (punctuation 4121 . 4122) (symbol 4113 . 4121) (TYPENAME 4104 . 4112) (punctuation 4103 . 4104) (TEMPLATE 4094 . 4102) (symbol 3990 . 4014) (symbol 3974 . 3989) (punctuation 3968 . 3969) (symbol 3960 . 3968) (TYPENAME 3951 . 3959) (punctuation 3950 . 3951) (TEMPLATE 3941 . 3949) (punctuation 3892 . 3893) (punctuation 3891 . 3892) (punctuation 3890 . 3891) (punctuation 3880 . 3881) (CONST 3875 . 3880) (symbol 3866 . 3874) (punctuation 3865 . 3866) (symbol 3860 . 3865) (punctuation 3859 . 3860) (punctuation 3858 . 3859) (symbol 3849 . 3858) (punctuation 3847 . 3848) (punctuation 3835 . 3836) (symbol 3827 . 3835) (punctuation 3826 . 3827) (symbol 3815 . 3826) (punctuation 3814 . 3815) (punctuation 3813 . 3814) (symbol 3807 . 3813) (punctuation 3793 . 3794) (symbol 3779 . 3793) (TYPENAME 3762 . 3770) (symbol 3733 . 3757) (symbol 3717 . 3732) (punctuation 3711 . 3712) (symbol 3703 . 3711) (TYPENAME 3694 . 3702) (punctuation 3693 . 3694) (TEMPLATE 3684 . 3692) (punctuation 3641 . 3642) (punctuation 3640 . 3641) (punctuation 3639 . 3640) (punctuation 3629 . 3630) (symbol 3621 . 3629) (punctuation 3620 . 3621) (symbol 3615 . 3620) (punctuation 3614 . 3615) (punctuation 3613 . 3614) (symbol 3604 . 3613) (punctuation 3602 . 3603) (punctuation 3590 . 3591) (symbol 3582 . 3590) (punctuation 3581 . 3582) (symbol 3570 . 3581) (punctuation 3569 . 3570) (punctuation 3568 . 3569) (symbol 3562 . 3568) (punctuation 3548 . 3549) (symbol 3534 . 3548) (TYPENAME 3517 . 3525) (symbol 3488 . 3512) (symbol 3472 . 3487) (punctuation 3466 . 3467) (symbol 3458 . 3466) (TYPENAME 3449 . 3457) (punctuation 3448 . 3449) (TEMPLATE 3439 . 3447) (symbol 3327 . 3351) (symbol 3311 . 3326) (punctuation 3305 . 3306) (symbol 3297 . 3305) (TYPENAME 3288 . 3296) (punctuation 3287 . 3288) (TEMPLATE 3278 . 3286) (symbol 3178 . 3202) (symbol 3162 . 3177) (punctuation 3156 . 3157) (symbol 3148 . 3156) (TYPENAME 3139 . 3147) (punctuation 3138 . 3139) (TEMPLATE 3129 . 3137) (symbol 3014 . 3038) (symbol 2998 . 3013) (punctuation 2992 . 2993) (symbol 2984 . 2992) (TYPENAME 2975 . 2983) (punctuation 2973 . 2974) (symbol 2972 . 2973) (INT 2968 . 2971) (punctuation 2967 . 2968) (TEMPLATE 2958 . 2966) (punctuation 2922 . 2923) (punctuation 2921 . 2922) (punctuation 2920 . 2921) (punctuation 2910 . 2911) (symbol 2909 . 2910) (punctuation 2907 . 2908) (symbol 2899 . 2907) (punctuation 2898 . 2899) (symbol 2894 . 2898) (punctuation 2893 . 2894) (punctuation 2892 . 2893) (symbol 2883 . 2892) (punctuation 2881 . 2882) (punctuation 2869 . 2870) (symbol 2861 . 2869) (punctuation 2860 . 2861) (symbol 2852 . 2860) (punctuation 2838 . 2839) (symbol 2823 . 2838) (TYPENAME 2805 . 2813) (symbol 2776 . 2800) (symbol 2760 . 2775) (punctuation 2754 . 2755) (symbol 2746 . 2754) (TYPENAME 2737 . 2745) (punctuation 2735 . 2736) (symbol 2734 . 2735) (INT 2730 . 2733) (punctuation 2729 . 2730) (TEMPLATE 2720 . 2728) (symbol 2609 . 2633) (symbol 2593 . 2608) (punctuation 2587 . 2588) (symbol 2579 . 2587) (TYPENAME 2570 . 2578) (punctuation 2568 . 2569) (symbol 2567 . 2568) (TYPENAME 2558 . 2566) (punctuation 2557 . 2558) (TEMPLATE 2548 . 2556) (punctuation 2514 . 2515) (punctuation 2513 . 2514) (punctuation 2512 . 2513) (punctuation 2502 . 2503) (symbol 2501 . 2502) (punctuation 2499 . 2500) (symbol 2491 . 2499) (punctuation 2490 . 2491) (symbol 2488 . 2490) (punctuation 2487 . 2488) (punctuation 2486 . 2487) (symbol 2477 . 2486) (punctuation 2475 . 2476) (punctuation 2463 . 2464) (symbol 2455 . 2463) (punctuation 2454 . 2455) (symbol 2446 . 2454) (punctuation 2432 . 2433) (symbol 2417 . 2432) (TYPENAME 2399 . 2407) (symbol 2370 . 2394) (symbol 2354 . 2369) (punctuation 2348 . 2349) (symbol 2340 . 2348) (TYPENAME 2331 . 2339) (punctuation 2329 . 2330) (symbol 2328 . 2329) (TYPENAME 2319 . 2327) (punctuation 2318 . 2319) (TEMPLATE 2309 . 2317))
      :lexical-table 
        '(("BOOST_FUSION_SEQUENCE_INTRINSIC_FWD_HPP_INCLUDED")
          )
))
  :file "!usr!include!boost!fusion!sequence!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
