;; Object mpl/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "mpl/"
  :tables
  (list
    (semanticdb-table "comparison.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_COMPARISON_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/equal_to.hpp" include (:system-flag t) nil [381 414])
            ("boost/mpl/not_equal_to.hpp" include (:system-flag t) nil [415 452])
            ("boost/mpl/less.hpp" include (:system-flag t) nil [453 482])
            ("boost/mpl/greater.hpp" include (:system-flag t) nil [483 515])
            ("boost/mpl/less_equal.hpp" include (:system-flag t) nil [516 551])
            ("boost/mpl/greater_equal.hpp" include (:system-flag t) nil [552 590]))          
      :file "comparison.hpp"
      :pointmax 636
      :fsize 635
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_COMPARISON_HPP_INCLUDED")
          )
)
    (semanticdb-table "if.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_IF_HPP_INCLUDED" variable (:constant-flag t) nil [44 69])
            ("boost/mpl/aux_/value_wknd.hpp" include (:system-flag t) nil [365 405])
            ("boost/mpl/aux_/static_cast.hpp" include (:system-flag t) nil [406 447])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [448 485])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [486 530])
            ("boost/mpl/aux_/config/integral.hpp" include (:system-flag t) nil [531 576])
            ("boost/mpl/aux_/config/ctps.hpp" include (:system-flag t) nil [577 618])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [619 666])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("if_c" type
                               (:template 
                                  ( ("bool" type nil nil nil)
                                    ("T1" type (:type "class") nil nil)
                                    ("T2" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("T1" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [842 858]))                                  )
                                (reparse-symbol namespacesubparts) [759 861])
                            ("if_c" type
                               (:template 
                                  ( ("T1" type (:type "class") nil nil)
                                    ("T2" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("T2" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [946 962]))                                  
                                :template-specifier 
                                  ( ("false" type nil nil nil)
                                    ("T1" type nil nil nil)
                                    ("T2" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [863 965])
                            ("if_" type
                               (:members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [1296 1304])
                                    ("almost_type_" variable (:type "int") (reparse-symbol classsubparts) [1620 1633])
                                    ("public" label nil (reparse-symbol classsubparts) [1637 1644])
                                    ("type" type
                                       (:typedef ("almost_type_::type" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [1649 1690]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [1282 1749]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [686 2874]))                  
                :type "namespace")
                nil [668 2875]))          
      :file "if.hpp"
      :pointmax 2913
      :fsize 2912
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 2863 . 2871) (symbol 2842 . 2863) (number 2864 . 2865) (semantic-list 1728 . 1746) (symbol 1700 . 1728) (semantic-list 1735 . 1745) (number 1729 . 1730) (punctuation 1618 . 1619) (symbol 1607 . 1609) (punctuation 1605 . 1606) (symbol 1594 . 1596) (punctuation 1592 . 1593) (semantic-list 1533 . 1576) (symbol 1508 . 1533) (punctuation 1569 . 1570) (punctuation 1568 . 1569) (semantic-list 1564 . 1568) (punctuation 1394 . 1395) (symbol 1390 . 1394) (TYPEDEF 1382 . 1389) (punctuation 1280 . 1281) (semantic-list 1271 . 1275) (symbol 1249 . 1271) (TYPENAME 1240 . 1248) (punctuation 1238 . 1239) (semantic-list 1229 . 1233) (symbol 1207 . 1229) (TYPENAME 1198 . 1206) (punctuation 1196 . 1197) (semantic-list 1187 . 1191) (symbol 1165 . 1187) (TYPENAME 1156 . 1164) (punctuation 1148 . 1149) (TEMPLATE 1140 . 1148))
      :lexical-table 
        '(("BOOST_MPL_IF_HPP_INCLUDED")
          )
)
    (semanticdb-table "and.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_AND_HPP_INCLUDED" variable (:constant-flag t) nil [45 71])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [367 420])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [523 555])
            ("boost/mpl/aux_/nested_type_wknd.hpp" include (:system-flag t) nil [556 605])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [606 646])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [647 694])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1125 1154])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1163 1216]))          
      :file "and.hpp"
      :pointmax 1594
      :fsize 1593
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 491 . 521) (symbol 484 . 491) (punctuation 483 . 484) (punctuation 481 . 482) (punctuation 480 . 481))
      :lexical-table 
        '(("BOOST_MPL_AND_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "and" 1155 . 1158) (punctuation "." 1158 . 1159) (symbol "hpp" 1159 . 1162)))
          )
)
    (semanticdb-table "or.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_OR_HPP_INCLUDED" variable (:constant-flag t) nil [44 69])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [365 418])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [521 553])
            ("boost/mpl/aux_/nested_type_wknd.hpp" include (:system-flag t) nil [554 603])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [604 644])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [645 692])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [693 737])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1161 1190])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1198 1251]))          
      :file "or.hpp"
      :pointmax 1624
      :fsize 1623
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 489 . 519) (symbol 482 . 489) (punctuation 481 . 482) (punctuation 479 . 480) (punctuation 478 . 479))
      :lexical-table 
        '(("BOOST_MPL_OR_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "or" 1191 . 1193) (punctuation "." 1193 . 1194) (symbol "hpp" 1194 . 1197)))
          )
)
    (semanticdb-table "not.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_NOT_HPP_INCLUDED" variable (:constant-flag t) nil [45 71])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [367 396])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [397 436])
            ("boost/mpl/aux_/nested_type_wknd.hpp" include (:system-flag t) nil [437 483])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [484 521])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [522 566])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type (:type "namespace") (reparse-symbol namespacesubparts) [603 736]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [586 990]))                  
                :type "namespace")
                nil [568 991]))          
      :file "not.hpp"
      :pointmax 1030
      :fsize 1029
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 979 . 987) (symbol 958 . 979) (number 980 . 981) (punctuation 955 . 956) (semantic-list 907 . 955) (punctuation 905 . 906) (symbol 891 . 896) (punctuation 890 . 891) (punctuation 889 . 890) (semantic-list 886 . 889) (symbol 856 . 886) (punctuation 844 . 845) (symbol 836 . 844) (punctuation 835 . 836) (punctuation 834 . 835) (symbol 831 . 834) (punctuation 829 . 830) (symbol 820 . 824) (STRUCT 813 . 819) (punctuation 811 . 812) (semantic-list 803 . 806) (symbol 781 . 803) (TYPENAME 772 . 780) (punctuation 764 . 765) (TEMPLATE 756 . 764) (punctuation 732 . 733) (semantic-list 729 . 732) (punctuation 727 . 728) (symbol 725 . 727) (punctuation 724 . 725) (punctuation 723 . 724) (symbol 718 . 723) (punctuation 716 . 717) (symbol 703 . 711) (STRUCT 696 . 702) (punctuation 664 . 665) (semantic-list 653 . 663) (symbol 630 . 653) (punctuation 628 . 629) (TEMPLATE 620 . 628))
      :lexical-table 
        '(("BOOST_MPL_NOT_HPP_INCLUDED")
          )
)
    (semanticdb-table "list.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_LIST_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/limits/list.hpp" include (:system-flag t) nil [412 451])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [452 487])
            ("boost/mpl/aux_/config/preprocessor.hpp" include (:system-flag t) nil [488 540])
            ("boost/preprocessor/inc.hpp" include (:system-flag t) nil [542 582])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [583 623])
            ("boost/preprocessor/stringize.hpp" include (:system-flag t) nil [624 670])
            ("AUX778076_LIST_HEADER" variable (:constant-flag t) nil [749 770])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [1061 1114])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1228 1257])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1267 1320]))          
      :file "list.hpp"
      :pointmax 1609
      :fsize 1608
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1185 . 1215) (symbol 1178 . 1185) (punctuation 1177 . 1178) (punctuation 1175 . 1176) (punctuation 1174 . 1175) (semantic-list 982 . 1020) (symbol 964 . 982) (punctuation 997 . 998) (punctuation 992 . 993) (punctuation 988 . 989) (symbol 956 . 963) (punctuation 997 . 998) (punctuation 992 . 993) (punctuation 988 . 989) (punctuation 952 . 953))
      :lexical-table 
        '(("BOOST_MPL_LIST_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "list" 1258 . 1262) (punctuation "." 1262 . 1263) (symbol "hpp" 1263 . 1266)))
          )
)
    (semanticdb-table "contains.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_CONTAINS_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost/mpl/contains_fwd.hpp" include (:system-flag t) nil [404 441])
            ("boost/mpl/sequence_tag.hpp" include (:system-flag t) nil [442 479])
            ("boost/mpl/aux_/contains_impl.hpp" include (:system-flag t) nil [480 523])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [524 561])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [562 606])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [844 926]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [626 965]))                  
                :type "namespace")
                nil [608 966]))          
      :file "contains.hpp"
      :pointmax 1010
      :fsize 1009
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 949 . 962) (symbol 928 . 949) (number 950 . 951) (TEMPLATE 835 . 843) (punctuation 834 . 835) (punctuation 833 . 834) (punctuation 823 . 824) (symbol 818 . 822) (punctuation 817 . 818) (punctuation 816 . 817) (punctuation 815 . 816) (symbol 807 . 815) (punctuation 806 . 807) (symbol 794 . 806) (TYPENAME 785 . 793) (punctuation 783 . 784) (symbol 770 . 783) (punctuation 768 . 769) (symbol 755 . 763) (STRUCT 748 . 754) (punctuation 746 . 747) (semantic-list 738 . 741) (symbol 716 . 738) (TYPENAME 707 . 715) (punctuation 705 . 706) (semantic-list 690 . 700) (symbol 668 . 690) (TYPENAME 659 . 667) (punctuation 651 . 652) (TEMPLATE 643 . 651))
      :lexical-table 
        '(("BOOST_MPL_CONTAINS_HPP_INCLUDED")
          )
)
    (semanticdb-table "find_if.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_FIND_IF_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/aux_/find_if_pred.hpp" include (:system-flag t) nil [375 417])
            ("boost/mpl/arg.hpp" include (:system-flag t) nil [418 446])
            ("boost/mpl/iter_fold_if.hpp" include (:system-flag t) nil [447 484])
            ("boost/mpl/aux_/common_name_wknd.hpp" include (:system-flag t) nil [485 531])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [532 569])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [570 614])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("find_if" type
                               (:members 
                                  ( ("result_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [984 997])
                                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1037 1047]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [805 1116]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [634 1153]))                  
                :type "namespace")
                nil [616 1154]))          
      :file "find_if.hpp"
      :pointmax 1197
      :fsize 1196
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1139 . 1150) (symbol 1118 . 1139) (number 1140 . 1141) (semantic-list 1081 . 1113) (symbol 1053 . 1081) (semantic-list 1092 . 1112) (number 1082 . 1083) (punctuation 1036 . 1037) (punctuation 1035 . 1036) (punctuation 1034 . 1035) (symbol 1027 . 1034) (punctuation 1026 . 1027) (symbol 1020 . 1026) (TYPENAME 1011 . 1019) (TYPEDEF 1003 . 1010) (punctuation 983 . 984) (punctuation 982 . 983) (punctuation 981 . 982) (punctuation 971 . 972) (punctuation 969 . 970) (symbol 960 . 969) (punctuation 959 . 960) (symbol 947 . 959) (punctuation 946 . 947) (punctuation 945 . 946) (symbol 942 . 945) (punctuation 940 . 941) (symbol 933 . 940) (punctuation 931 . 932) (punctuation 911 . 912) (number 910 . 911) (punctuation 909 . 910) (symbol 906 . 909) (punctuation 905 . 906) (punctuation 904 . 905) (symbol 901 . 904) (punctuation 899 . 900) (VOID 886 . 890) (punctuation 884 . 885) (symbol 867 . 875) (punctuation 855 . 856) (symbol 843 . 855) (TYPENAME 834 . 842) (TYPEDEF 826 . 833) (punctuation 803 . 804) (semantic-list 787 . 798) (symbol 765 . 787) (TYPENAME 756 . 764) (punctuation 754 . 755) (semantic-list 739 . 749) (symbol 717 . 739) (TYPENAME 708 . 716) (punctuation 700 . 701) (TEMPLATE 692 . 700) (semantic-list 681 . 690) (symbol 651 . 681))
      :lexical-table 
        '(("BOOST_MPL_FIND_IF_HPP_INCLUDED")
          )
)
    (semanticdb-table "remove_if.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_REMOVE_IF_HPP_INCLUDED" variable (:constant-flag t) nil [51 83])
            ("boost/mpl/fold.hpp" include (:system-flag t) nil [417 446])
            ("boost/mpl/reverse_fold.hpp" include (:system-flag t) nil [447 484])
            ("boost/mpl/eval_if.hpp" include (:system-flag t) nil [485 517])
            ("boost/mpl/identity.hpp" include (:system-flag t) nil [518 551])
            ("boost/mpl/protect.hpp" include (:system-flag t) nil [552 584])
            ("boost/mpl/lambda.hpp" include (:system-flag t) nil [585 616])
            ("boost/mpl/apply.hpp" include (:system-flag t) nil [617 647])
            ("boost/mpl/aux_/inserter_algorithm.hpp" include (:system-flag t) nil [648 696])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("remove_if_helper" type
                                       (:template 
                                          ( ("Pred" type (:type "class") nil nil)
                                            ("InsertOp" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil)
                                                    ("U" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1054 1064]))                                                  )
                                                (reparse-symbol classsubparts) [825 1071]))                                          )
                                        (reparse-symbol namespacesubparts) [750 1074]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [733 1775]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [716 1847]))                  
                :type "namespace")
                nil [698 1848]))          
      :file "remove_if.hpp"
      :pointmax 1893
      :fsize 1892
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1830 . 1844) (symbol 1794 . 1830) (number 1831 . 1832) (punctuation 1771 . 1772) (semantic-list 1768 . 1771) (punctuation 1766 . 1767) (punctuation 1756 . 1757) (punctuation 1754 . 1755) (symbol 1732 . 1741) (punctuation 1731 . 1732) (punctuation 1730 . 1731) (symbol 1722 . 1730) (TYPENAME 1713 . 1721) (punctuation 1711 . 1712) (symbol 1694 . 1698) (punctuation 1693 . 1694) (punctuation 1692 . 1693) (punctuation 1691 . 1692) (symbol 1682 . 1691) (punctuation 1681 . 1682) (symbol 1675 . 1681) (TYPENAME 1666 . 1674) (punctuation 1650 . 1651) (symbol 1634 . 1650) (punctuation 1633 . 1634) (punctuation 1632 . 1633) (symbol 1629 . 1632) (punctuation 1627 . 1628) (symbol 1620 . 1627) (punctuation 1618 . 1619) (symbol 1604 . 1609) (punctuation 1603 . 1604) (punctuation 1602 . 1603) (symbol 1594 . 1602) (TYPENAME 1585 . 1593) (punctuation 1583 . 1584) (symbol 1566 . 1574) (punctuation 1554 . 1555) (symbol 1542 . 1554) (punctuation 1540 . 1541) (symbol 1513 . 1535) (STRUCT 1506 . 1512) (punctuation 1504 . 1505) (symbol 1491 . 1499) (TYPENAME 1482 . 1490) (punctuation 1480 . 1481) (symbol 1466 . 1475) (TYPENAME 1457 . 1465) (punctuation 1455 . 1456) (symbol 1442 . 1450) (TYPENAME 1433 . 1441) (punctuation 1425 . 1426) (TEMPLATE 1417 . 1425) (punctuation 1414 . 1415) (semantic-list 1411 . 1414) (punctuation 1409 . 1410) (punctuation 1399 . 1400) (punctuation 1397 . 1398) (symbol 1375 . 1384) (punctuation 1374 . 1375) (punctuation 1373 . 1374) (symbol 1365 . 1373) (TYPENAME 1356 . 1364) (punctuation 1354 . 1355) (symbol 1337 . 1341) (punctuation 1336 . 1337) (punctuation 1335 . 1336) (punctuation 1334 . 1335) (symbol 1325 . 1334) (punctuation 1324 . 1325) (symbol 1318 . 1324) (TYPENAME 1309 . 1317) (punctuation 1293 . 1294) (symbol 1277 . 1293) (punctuation 1276 . 1277) (punctuation 1275 . 1276) (symbol 1272 . 1275) (punctuation 1270 . 1271) (symbol 1263 . 1270) (punctuation 1261 . 1262) (symbol 1247 . 1252) (punctuation 1246 . 1247) (punctuation 1245 . 1246) (symbol 1237 . 1245) (TYPENAME 1228 . 1236) (punctuation 1226 . 1227) (symbol 1209 . 1217) (punctuation 1197 . 1198) (symbol 1193 . 1197) (punctuation 1191 . 1192) (symbol 1172 . 1186) (STRUCT 1165 . 1171) (punctuation 1163 . 1164) (symbol 1150 . 1158) (TYPENAME 1141 . 1149) (punctuation 1139 . 1140) (symbol 1125 . 1134) (TYPENAME 1116 . 1124) (punctuation 1114 . 1115) (symbol 1101 . 1109) (TYPENAME 1092 . 1100) (punctuation 1084 . 1085) (TEMPLATE 1076 . 1084) (punctuation 1053 . 1054) (punctuation 1052 . 1053) (punctuation 1051 . 1052) (punctuation 1037 . 1038) (symbol 1036 . 1037) (punctuation 1035 . 1036) (symbol 1027 . 1035) (punctuation 1026 . 1027) (symbol 1018 . 1026) (punctuation 1017 . 1018) (symbol 1011 . 1017) (punctuation 1009 . 1010) (punctuation 995 . 996) (symbol 987 . 995) (punctuation 986 . 987) (symbol 978 . 986) (punctuation 976 . 977) (symbol 959 . 963) (punctuation 958 . 959) (punctuation 957 . 958) (punctuation 956 . 957) (symbol 955 . 956) (punctuation 954 . 955) (symbol 950 . 954) (punctuation 949 . 950) (symbol 943 . 949) (TYPENAME 934 . 942) (punctuation 918 . 919) (symbol 911 . 918) (TYPENAME 902 . 910) (TYPEDEF 894 . 901))
      :lexical-table 
        '(("BOOST_MPL_REMOVE_IF_HPP_INCLUDED")
          )
)
    (semanticdb-table "vector.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_VECTOR_HPP_INCLUDED" variable (:constant-flag t) nil [48 77])
            ("boost/mpl/limits/vector.hpp" include (:system-flag t) nil [416 457])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [458 493])
            ("boost/mpl/aux_/config/preprocessor.hpp" include (:system-flag t) nil [494 546])
            ("boost/preprocessor/inc.hpp" include (:system-flag t) nil [548 588])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [589 629])
            ("boost/preprocessor/stringize.hpp" include (:system-flag t) nil [630 676])
            ("AUX778076_VECTOR_HEADER" variable (:constant-flag t) nil [755 778])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [1087 1140])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1254 1283])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1295 1348]))          
      :file "vector.hpp"
      :pointmax 1645
      :fsize 1644
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1211 . 1241) (symbol 1204 . 1211) (punctuation 1203 . 1204) (punctuation 1201 . 1202) (punctuation 1200 . 1201) (semantic-list 1002 . 1044) (symbol 984 . 1002) (punctuation 1019 . 1020) (punctuation 1012 . 1013) (punctuation 1008 . 1009) (symbol 976 . 983) (punctuation 1019 . 1020) (punctuation 1012 . 1013) (punctuation 1008 . 1009) (punctuation 972 . 973))
      :lexical-table 
        '(("BOOST_MPL_VECTOR_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "vector" 1284 . 1290) (punctuation "." 1290 . 1291) (symbol "hpp" 1291 . 1294)))
          )
)
    (semanticdb-table "push_back.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_PUSH_BACK_HPP_INCLUDED" variable (:constant-flag t) nil [51 83])
            ("boost/mpl/push_back_fwd.hpp" include (:system-flag t) nil [379 417])
            ("boost/mpl/aux_/push_back_impl.hpp" include (:system-flag t) nil [418 462])
            ("boost/mpl/sequence_tag.hpp" include (:system-flag t) nil [463 500])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [501 538])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [539 583])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [823 906])
                            ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [1080 1163]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [603 1244]))                  
                :type "namespace")
                nil [585 1245]))          
      :file "push_back.hpp"
      :pointmax 1290
      :fsize 1289
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1223 . 1241) (symbol 1202 . 1223) (number 1224 . 1225) (semantic-list 1187 . 1201) (symbol 1166 . 1187) (number 1188 . 1189) (TEMPLATE 1071 . 1079) (punctuation 1070 . 1071) (punctuation 1069 . 1070) (punctuation 1059 . 1060) (symbol 1054 . 1058) (punctuation 1053 . 1054) (punctuation 1052 . 1053) (punctuation 1051 . 1052) (symbol 1043 . 1051) (punctuation 1042 . 1043) (symbol 1030 . 1042) (TYPENAME 1021 . 1029) (punctuation 1019 . 1020) (symbol 1001 . 1019) (punctuation 999 . 1000) (symbol 981 . 994) (STRUCT 974 . 980) (punctuation 972 . 973) (semantic-list 957 . 967) (symbol 935 . 957) (TYPENAME 926 . 934) (punctuation 917 . 918) (TEMPLATE 909 . 917) (TEMPLATE 814 . 822) (punctuation 813 . 814) (punctuation 812 . 813) (punctuation 802 . 803) (symbol 797 . 801) (punctuation 796 . 797) (punctuation 795 . 796) (punctuation 794 . 795) (symbol 786 . 794) (punctuation 785 . 786) (symbol 773 . 785) (TYPENAME 764 . 772) (punctuation 762 . 763) (symbol 748 . 762) (punctuation 746 . 747) (symbol 732 . 741) (STRUCT 725 . 731) (punctuation 723 . 724) (semantic-list 715 . 718) (symbol 693 . 715) (TYPENAME 684 . 692) (punctuation 682 . 683) (semantic-list 667 . 677) (symbol 645 . 667) (TYPENAME 636 . 644) (punctuation 628 . 629) (TEMPLATE 620 . 628))
      :lexical-table 
        '(("BOOST_MPL_PUSH_BACK_HPP_INCLUDED")
          )
)
    (semanticdb-table "at.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_AT_HPP_INCLUDED" variable (:constant-flag t) nil [44 69])
            ("boost/mpl/at_fwd.hpp" include (:system-flag t) nil [365 396])
            ("boost/mpl/aux_/at_impl.hpp" include (:system-flag t) nil [397 434])
            ("boost/mpl/long.hpp" include (:system-flag t) nil [435 464])
            ("boost/mpl/sequence_tag.hpp" include (:system-flag t) nil [465 502])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [503 540])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [541 585])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [586 625])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [851 927])
                            ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [1094 1130]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [645 1163]))                  
                :type "namespace")
                nil [627 1164]))          
      :file "at.hpp"
      :pointmax 1202
      :fsize 1201
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1153 . 1160) (symbol 1132 . 1153) (number 1154 . 1155) (TEMPLATE 1085 . 1093) (punctuation 1084 . 1085) (punctuation 1083 . 1084) (punctuation 1073 . 1074) (symbol 1068 . 1072) (punctuation 1067 . 1068) (punctuation 1066 . 1067) (punctuation 1065 . 1066) (symbol 1057 . 1065) (punctuation 1056 . 1057) (symbol 1044 . 1056) (TYPENAME 1035 . 1043) (punctuation 1033 . 1034) (symbol 1026 . 1033) (punctuation 1024 . 1025) (symbol 1015 . 1019) (STRUCT 1008 . 1014) (punctuation 1006 . 1007) (semantic-list 992 . 1001) (symbol 969 . 992) (punctuation 967 . 968) (symbol 954 . 962) (TYPENAME 945 . 953) (punctuation 937 . 938) (TEMPLATE 929 . 937) (TEMPLATE 842 . 850) (punctuation 841 . 842) (punctuation 840 . 841) (punctuation 830 . 831) (symbol 825 . 829) (punctuation 824 . 825) (punctuation 823 . 824) (punctuation 822 . 823) (symbol 814 . 822) (punctuation 813 . 814) (symbol 801 . 813) (TYPENAME 792 . 800) (punctuation 790 . 791) (symbol 783 . 790) (punctuation 781 . 782) (symbol 774 . 776) (STRUCT 767 . 773) (punctuation 765 . 766) (semantic-list 757 . 760) (symbol 735 . 757) (TYPENAME 726 . 734) (punctuation 724 . 725) (semantic-list 709 . 719) (symbol 687 . 709) (TYPENAME 678 . 686) (punctuation 670 . 671) (TEMPLATE 662 . 670))
      :lexical-table 
        '(("BOOST_MPL_AT_HPP_INCLUDED")
          )
)
    (semanticdb-table "size.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_SIZE_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/size_fwd.hpp" include (:system-flag t) nil [369 402])
            ("boost/mpl/sequence_tag.hpp" include (:system-flag t) nil [403 440])
            ("boost/mpl/aux_/size_impl.hpp" include (:system-flag t) nil [441 480])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [481 518])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [519 563])
            ("boost/mpl/aux_/msvc_eti_base.hpp" include (:system-flag t) nil [564 607])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("type" variable (:type "int") (reparse-symbol namespacesubparts) [870 933]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [627 968]))                  
                :type "namespace")
                nil [609 969]))          
      :file "size.hpp"
      :pointmax 1009
      :fsize 1008
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 956 . 965) (symbol 935 . 956) (number 957 . 958) (punctuation 869 . 870) (punctuation 868 . 869) (punctuation 867 . 868) (symbol 856 . 860) (punctuation 855 . 856) (punctuation 854 . 855) (punctuation 853 . 854) (symbol 844 . 852) (punctuation 842 . 843) (symbol 837 . 842) (TEMPLATE 828 . 836) (punctuation 827 . 828) (punctuation 826 . 827) (punctuation 812 . 813) (symbol 807 . 811) (punctuation 806 . 807) (punctuation 805 . 806) (punctuation 804 . 805) (symbol 796 . 804) (punctuation 795 . 796) (symbol 783 . 795) (TYPENAME 774 . 782) (punctuation 772 . 773) (symbol 763 . 772) (TYPENAME 754 . 762) (punctuation 744 . 745) (symbol 731 . 744) (punctuation 730 . 731) (punctuation 729 . 730) (symbol 726 . 729) (punctuation 724 . 725) (symbol 715 . 719) (STRUCT 708 . 714) (punctuation 706 . 707) (semantic-list 691 . 701) (symbol 669 . 691) (TYPENAME 660 . 668) (punctuation 652 . 653) (TEMPLATE 644 . 652))
      :lexical-table 
        '(("BOOST_MPL_SIZE_HPP_INCLUDED")
          )
)
    (semanticdb-table "equal_to.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_EQUAL_TO_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [385 402])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [420 438])
            ("boost/mpl/aux_/comparison_op.hpp" include (:system-flag t) nil [442 485]))          
      :file "equal_to.hpp"
      :pointmax 529
      :fsize 528
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_EQUAL_TO_HPP_INCLUDED")
          ("AUX778076_OP_NAME" . ((symbol "equal_to" 403 . 411)))
          ("AUX778076_OP_TOKEN" . ((punctuation "=" 439 . 440) (punctuation "=" 440 . 441)))
          )
)
    (semanticdb-table "not_equal_to.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_NOT_EQUAL_TO_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [393 410])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [432 450])
            ("boost/mpl/aux_/comparison_op.hpp" include (:system-flag t) nil [454 497]))          
      :file "not_equal_to.hpp"
      :pointmax 545
      :fsize 544
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_NOT_EQUAL_TO_HPP_INCLUDED")
          ("AUX778076_OP_NAME" . ((symbol "not_equal_to" 411 . 423)))
          ("AUX778076_OP_TOKEN" . ((punctuation "!" 451 . 452) (punctuation "=" 452 . 453)))
          )
)
    (semanticdb-table "less.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_LESS_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [377 394])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [408 426])
            ("boost/mpl/aux_/comparison_op.hpp" include (:system-flag t) nil [429 472]))          
      :file "less.hpp"
      :pointmax 512
      :fsize 511
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_LESS_HPP_INCLUDED")
          ("AUX778076_OP_NAME" . ((symbol "less" 395 . 399)))
          ("AUX778076_OP_TOKEN" . ((punctuation "<" 427 . 428)))
          )
)
    (semanticdb-table "greater.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_GREATER_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [383 400])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [417 435])
            ("boost/mpl/aux_/comparison_op.hpp" include (:system-flag t) nil [438 481]))          
      :file "greater.hpp"
      :pointmax 524
      :fsize 523
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_GREATER_HPP_INCLUDED")
          ("AUX778076_OP_NAME" . ((symbol "greater" 401 . 408)))
          ("AUX778076_OP_TOKEN" . ((punctuation ">" 436 . 437)))
          )
)
    (semanticdb-table "less_equal.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_LESS_EQUAL_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [389 406])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [426 444])
            ("boost/mpl/aux_/comparison_op.hpp" include (:system-flag t) nil [448 491]))          
      :file "less_equal.hpp"
      :pointmax 537
      :fsize 536
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_LESS_EQUAL_HPP_INCLUDED")
          ("AUX778076_OP_NAME" . ((symbol "less_equal" 407 . 417)))
          ("AUX778076_OP_TOKEN" . ((punctuation "<" 445 . 446) (punctuation "=" 446 . 447)))
          )
)
    (semanticdb-table "greater_equal.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_GREATER_EQUAL_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [395 412])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [435 453])
            ("boost/mpl/aux_/comparison_op.hpp" include (:system-flag t) nil [457 500]))          
      :file "greater_equal.hpp"
      :pointmax 549
      :fsize 548
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_GREATER_EQUAL_HPP_INCLUDED")
          ("AUX778076_OP_NAME" . ((symbol "greater_equal" 413 . 426)))
          ("AUX778076_OP_TOKEN" . ((punctuation ">" 454 . 455) (punctuation "=" 455 . 456)))
          )
)
    (semanticdb-table "int.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_INT_HPP_INCLUDED" variable (:constant-flag t) nil [45 71])
            ("boost/mpl/int_fwd.hpp" include (:system-flag t) nil [367 399])
            ("AUX_WRAPPER_VALUE_TYPE" variable (:constant-flag t) nil [409 431])
            ("boost/mpl/aux_/integral_wrapper.hpp" include (:system-flag t) nil [436 482]))          
      :file "int.hpp"
      :pointmax 521
      :fsize 520
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("AUX_WRAPPER_VALUE_TYPE" . ((INT "int" 432 . 435)))
          ("BOOST_MPL_INT_HPP_INCLUDED")
          )
)
    (semanticdb-table "bool.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_BOOL_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/bool_fwd.hpp" include (:system-flag t) nil [369 402])
            ("boost/mpl/integral_c_tag.hpp" include (:system-flag t) nil [403 442])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [443 495])
            ("bool_" type
               (:template 
                  ( ("bool" type nil nil nil))                  
                :type "struct"
                :members 
                  ( ("BOOST_STATIC_CONSTANT" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [600 605])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [606 616]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [578 618])
                    ("tag" type
                       (:typedef ("integral_c_tag" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [623 650])
                    ("type" type
                       (:typedef ("bool_" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [655 674])
                    ("value_type" type
                       (:typedef ("bool")
                        :type "typedef")
                        (reparse-symbol classsubparts) [679 703]))                  )
                nil [539 772])
            ("bool_::value" variable (:type "bool") nil [827 875]))          
      :file "bool.hpp"
      :pointmax 965
      :fsize 964
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((symbol 884 . 925) (semantic-list 746 . 769) (CONST 740 . 745) (semantic-list 737 . 739) (BOOL 733 . 737) (OPERATOR 724 . 732) (symbol 708 . 723) (symbol 497 . 537))
      :lexical-table 
        '(("BOOST_MPL_BOOL_HPP_INCLUDED")
          )
)
    (semanticdb-table "contains_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_CONTAINS_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("contains_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [447 493])
                            ("contains" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [494 552]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [430 555]))                  
                :type "namespace")
                nil [412 556]))          
      :file "contains_fwd.hpp"
      :pointmax 604
      :fsize 603
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_CONTAINS_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "sequence_tag.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_SEQUENCE_TAG_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost/mpl/sequence_tag_fwd.hpp" include (:system-flag t) nil [385 426])
            ("boost/mpl/aux_/has_tag.hpp" include (:system-flag t) nil [427 464])
            ("boost/mpl/aux_/has_begin.hpp" include (:system-flag t) nil [465 504])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [505 542])
            ("boost/mpl/aux_/is_msvc_eti_arg.hpp" include (:system-flag t) nil [543 588])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [589 629])
            ("boost/mpl/aux_/yes_no.hpp" include (:system-flag t) nil [630 666])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [667 714])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("sequence_tag_impl" type
                                       (:template 
                                          ( ("bool" type nil nil nil)
                                            ("bool" type nil nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("result2_" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [1995 2041]))                                          )
                                        (reparse-symbol namespacesubparts) [1786 2044])
                                    ("AUX_CLASS_SEQUENCE_TAG_SPEC" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2057 2084])
                                    ("sequence_tag_impl" type
                                       (:type "struct"
                                        :members 
                                          ( ("result2_" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" variable
                                                       (:typemodifiers ("typename")
                                                        :type "int")
                                                        (reparse-symbol classsubparts) nil))                                                  )
                                                (reparse-symbol classsubparts) nil))                                          
                                        :template-specifier 
                                          ( ("true" type nil nil nil)
                                            ("true" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2297 2360])
                                    ("sequence_tag_impl" type
                                       (:type "struct"
                                        :members 
                                          ( ("result2_" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" variable
                                                       (:typemodifiers ("typename")
                                                        :type "int")
                                                        (reparse-symbol classsubparts) nil))                                                  )
                                                (reparse-symbol classsubparts) nil))                                          
                                        :template-specifier 
                                          ( ("true" type nil nil nil)
                                            ("false" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2361 2425])
                                    ("sequence_tag_impl" type
                                       (:type "struct"
                                        :members 
                                          ( ("result2_" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("nested_begin_end_tag" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) nil))                                                  )
                                                (reparse-symbol classsubparts) nil))                                          
                                        :template-specifier 
                                          ( ("false" type nil nil nil)
                                            ("true" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2426 2488])
                                    ("sequence_tag_impl" type
                                       (:type "struct"
                                        :members 
                                          ( ("result2_" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("non_sequence_tag" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) nil))                                                  )
                                                (reparse-symbol classsubparts) nil))                                          
                                        :template-specifier 
                                          ( ("false" type nil nil nil)
                                            ("false" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2489 2548]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1769 2590])
                            ("result2_" variable (:type "int") (reparse-symbol namespacesubparts) [2853 2876]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [734 2941]))                  
                :type "namespace")
                nil [716 2942]))          
      :file "sequence_tag.hpp"
      :pointmax 2990
      :fsize 2989
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 2921 . 2938) (symbol 2900 . 2921) (number 2922 . 2923) (TEMPLATE 2844 . 2852) (punctuation 2843 . 2844) (punctuation 2842 . 2843) (punctuation 2841 . 2842) (symbol 2827 . 2832) (punctuation 2826 . 2827) (punctuation 2825 . 2826) (punctuation 2824 . 2825) (symbol 2816 . 2824) (punctuation 2815 . 2816) (symbol 2806 . 2815) (punctuation 2805 . 2806) (punctuation 2804 . 2805) (symbol 2801 . 2804) (punctuation 2800 . 2801) (punctuation 2799 . 2800) (symbol 2796 . 2799) (punctuation 2795 . 2796) (punctuation 2794 . 2795) (symbol 2789 . 2794) (punctuation 2788 . 2789) (punctuation 2787 . 2788) (punctuation 2785 . 2786) (symbol 2771 . 2776) (punctuation 2770 . 2771) (punctuation 2769 . 2770) (punctuation 2768 . 2769) (symbol 2760 . 2768) (punctuation 2759 . 2760) (symbol 2752 . 2759) (punctuation 2751 . 2752) (punctuation 2750 . 2751) (symbol 2747 . 2750) (punctuation 2746 . 2747) (punctuation 2745 . 2746) (symbol 2742 . 2745) (punctuation 2741 . 2742) (punctuation 2740 . 2741) (symbol 2735 . 2740) (punctuation 2734 . 2735) (punctuation 2733 . 2734) (punctuation 2721 . 2722) (symbol 2704 . 2721) (punctuation 2703 . 2704) (punctuation 2702 . 2703) (symbol 2699 . 2702) (punctuation 2697 . 2698) (symbol 2680 . 2692) (STRUCT 2673 . 2679) (punctuation 2671 . 2672) (semantic-list 2656 . 2666) (symbol 2634 . 2656) (TYPENAME 2625 . 2633) (punctuation 2617 . 2618) (TEMPLATE 2609 . 2617))
      :lexical-table 
        '(("BOOST_MPL_SEQUENCE_TAG_HPP_INCLUDED")
          )
)
    (semanticdb-table "arg.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_ARG_HPP_INCLUDED" variable (:constant-flag t) nil [101 127])
            ("boost/mpl/arg_fwd.hpp" include (:system-flag t) nil [501 536])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [537 572])
            ("boost/mpl/aux_/na_assert.hpp" include (:system-flag t) nil [573 615])
            ("boost/mpl/aux_/arity_spec.hpp" include (:system-flag t) nil [616 659])
            ("boost/mpl/aux_/arg_typedef.hpp" include (:system-flag t) nil [660 704])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [713 765])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [766 819])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [933 962])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [971 1024]))          
      :file "arg.hpp"
      :pointmax 3217
      :fsize 3216
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 890 . 920) (symbol 883 . 890) (punctuation 882 . 883) (punctuation 880 . 881) (punctuation 879 . 880))
      :lexical-table 
        '(("BOOST_MPL_ARG_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "arg" 963 . 966) (punctuation "." 966 . 967) (symbol "hpp" 967 . 970)))
          )
)
    (semanticdb-table "iter_fold_if.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_ITER_FOLD_IF_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost/mpl/begin_end.hpp" include (:system-flag t) nil [417 451])
            ("boost/mpl/logical.hpp" include (:system-flag t) nil [452 484])
            ("boost/mpl/always.hpp" include (:system-flag t) nil [485 516])
            ("boost/mpl/eval_if.hpp" include (:system-flag t) nil [517 549])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [550 577])
            ("boost/mpl/pair.hpp" include (:system-flag t) nil [578 607])
            ("boost/mpl/apply.hpp" include (:system-flag t) nil [608 638])
            ("boost/mpl/aux_/iter_fold_if_impl.hpp" include (:system-flag t) nil [639 686])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [687 724])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [725 769])
            ("boost/mpl/aux_/config/forwarding.hpp" include (:system-flag t) nil [770 817])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [818 865])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [867 907])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("iter_fold_if" type
                                       (:members 
                                          ( ("first_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1852 1864])
                                            ("last_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1901 1912])
                                            ("backward_pred_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2094 2114])
                                            ("result_" type
                                               (:typedef ("aux::iter_fold_if_impl" type
                                                     (:template-specifier 
                                                        ( ("first_" type nil nil nil)
                                                          ("State" type nil nil nil)
                                                          ("ForwardOp" type nil nil nil)
                                                          ("protect" type nil nil nil)
                                                          ("BackwardOp" type nil nil nil)
                                                          ("backward_pred_" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [2326 2693])
                                            ("public" label nil (reparse-symbol classsubparts) [2702 2709])
                                            ("type" variable (:type "int") (reparse-symbol classsubparts) [2810 2815]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [1791 2981]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [944 3024]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [927 3025]))                  
                :type "namespace")
                nil [909 3073]))          
      :file "iter_fold_if.hpp"
      :pointmax 3073
      :fsize 3072
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 3004 . 3021) (symbol 2983 . 3004) (number 3005 . 3006) (semantic-list 2849 . 2978) (symbol 2821 . 2849) (semantic-list 2896 . 2968) (number 2861 . 2862) (punctuation 2808 . 2809) (symbol 2791 . 2799) (punctuation 2790 . 2791) (punctuation 2789 . 2790) (symbol 2782 . 2789) (TYPENAME 2773 . 2781) (punctuation 2771 . 2772) (symbol 2757 . 2762) (punctuation 2756 . 2757) (punctuation 2755 . 2756) (symbol 2748 . 2755) (TYPENAME 2739 . 2747) (punctuation 2727 . 2728) (symbol 2723 . 2727) (TYPEDEF 2715 . 2722) (punctuation 2093 . 2094) (punctuation 2092 . 2093) (punctuation 2091 . 2092) (punctuation 2081 . 2082) (symbol 2064 . 2081) (punctuation 2063 . 2064) (symbol 2055 . 2063) (punctuation 2053 . 2054) (punctuation 2043 . 2044) (punctuation 2041 . 2042) (symbol 2036 . 2041) (punctuation 2035 . 2036) (symbol 2029 . 2035) (punctuation 2027 . 2028) (punctuation 2026 . 2027) (symbol 2020 . 2026) (punctuation 2019 . 2020) (symbol 2013 . 2019) (punctuation 2011 . 2012) (punctuation 2010 . 2011) (symbol 2000 . 2010) (punctuation 1999 . 2000) (symbol 1994 . 1999) (punctuation 1992 . 1993) (symbol 1989 . 1992) (punctuation 1987 . 1988) (punctuation 1977 . 1978) (symbol 1960 . 1977) (punctuation 1959 . 1960) (symbol 1954 . 1959) (punctuation 1942 . 1943) (symbol 1935 . 1942) (TYPENAME 1926 . 1934) (TYPEDEF 1918 . 1925) (punctuation 1900 . 1901) (punctuation 1899 . 1900) (punctuation 1898 . 1899) (symbol 1890 . 1898) (punctuation 1889 . 1890) (symbol 1886 . 1889) (TYPENAME 1877 . 1885) (TYPEDEF 1869 . 1876) (punctuation 1851 . 1852) (punctuation 1850 . 1851) (punctuation 1849 . 1850) (symbol 1841 . 1849) (punctuation 1840 . 1841) (symbol 1835 . 1840) (TYPENAME 1826 . 1834) (TYPEDEF 1818 . 1825) (punctuation 1789 . 1790) (semantic-list 1765 . 1784) (symbol 1743 . 1765) (TYPENAME 1734 . 1742) (punctuation 1732 . 1733) (semantic-list 1715 . 1727) (symbol 1693 . 1715) (TYPENAME 1684 . 1692) (punctuation 1682 . 1683) (semantic-list 1659 . 1677) (symbol 1637 . 1659) (TYPENAME 1628 . 1636) (punctuation 1626 . 1627) (semantic-list 1610 . 1621) (symbol 1588 . 1610) (TYPENAME 1579 . 1587) (punctuation 1577 . 1578) (semantic-list 1565 . 1572) (symbol 1543 . 1565) (TYPENAME 1534 . 1542) (punctuation 1532 . 1533) (semantic-list 1517 . 1527) (symbol 1495 . 1517) (TYPENAME 1486 . 1494) (punctuation 1478 . 1479) (TEMPLATE 1470 . 1478) (semantic-list 1040 . 1451) (symbol 1022 . 1039) (STRUCT 1015 . 1021) (punctuation 1444 . 1445) (punctuation 1444 . 1445) (punctuation 1013 . 1014) (symbol 1000 . 1012) (TYPENAME 991 . 999) (punctuation 989 . 990) (symbol 980 . 989) (TYPENAME 971 . 979) (punctuation 969 . 970) (TEMPLATE 961 . 969) (punctuation 1444 . 1445) (punctuation 1444 . 1445))
      :lexical-table 
        '(("BOOST_MPL_ITER_FOLD_IF_HPP_INCLUDED")
          )
)
    (semanticdb-table "fold.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_FOLD_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/begin_end.hpp" include (:system-flag t) nil [407 441])
            ("boost/mpl/O1_size.hpp" include (:system-flag t) nil [442 474])
            ("boost/mpl/aux_/fold_impl.hpp" include (:system-flag t) nil [475 514])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [515 552])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [553 597])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("fold" type
                               (:members 
                                  ( ("type" variable (:type ("state" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1019 1030]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [792 1102]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [617 1137]))                  
                :type "namespace")
                nil [599 1138]))          
      :file "fold.hpp"
      :pointmax 1178
      :fsize 1177
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1125 . 1134) (symbol 1104 . 1125) (number 1126 . 1127) (semantic-list 1064 . 1099) (symbol 1036 . 1064) (semantic-list 1072 . 1098) (number 1065 . 1066) (punctuation 1018 . 1019) (punctuation 1017 . 1018) (punctuation 1016 . 1017) (symbol 998 . 1007) (punctuation 996 . 997) (symbol 982 . 987) (punctuation 980 . 981) (symbol 967 . 971) (punctuation 966 . 967) (punctuation 965 . 966) (punctuation 964 . 965) (symbol 956 . 964) (punctuation 955 . 956) (symbol 952 . 955) (TYPENAME 943 . 951) (punctuation 941 . 942) (symbol 928 . 932) (punctuation 927 . 928) (punctuation 926 . 927) (punctuation 925 . 926) (symbol 917 . 925) (punctuation 916 . 917) (symbol 911 . 916) (TYPENAME 902 . 910) (punctuation 900 . 901) (symbol 886 . 891) (punctuation 885 . 886) (punctuation 884 . 885) (punctuation 883 . 884) (symbol 875 . 883) (punctuation 874 . 875) (symbol 867 . 874) (punctuation 866 . 867) (punctuation 865 . 866) (symbol 862 . 865) (punctuation 861 . 862) (punctuation 860 . 861) (symbol 855 . 860) (punctuation 854 . 855) (punctuation 853 . 854) (punctuation 841 . 842) (symbol 832 . 841) (punctuation 831 . 832) (punctuation 830 . 831) (symbol 827 . 830) (TYPENAME 818 . 826) (TYPEDEF 810 . 817) (punctuation 790 . 791) (semantic-list 774 . 785) (symbol 752 . 774) (TYPENAME 743 . 751) (punctuation 741 . 742) (semantic-list 729 . 736) (symbol 707 . 729) (TYPENAME 698 . 706) (punctuation 696 . 697) (semantic-list 681 . 691) (symbol 659 . 681) (TYPENAME 650 . 658) (punctuation 642 . 643) (TEMPLATE 634 . 642))
      :lexical-table 
        '(("BOOST_MPL_FOLD_HPP_INCLUDED")
          )
)
    (semanticdb-table "reverse_fold.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_REVERSE_FOLD_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost/mpl/begin_end.hpp" include (:system-flag t) nil [423 457])
            ("boost/mpl/O1_size.hpp" include (:system-flag t) nil [458 490])
            ("boost/mpl/arg.hpp" include (:system-flag t) nil [491 519])
            ("boost/mpl/aux_/reverse_fold_impl.hpp" include (:system-flag t) nil [520 567])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [568 605])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("reverse_fold" type
                               (:members 
                                  ( ("type" variable (:type ("state" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1099 1110]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [835 1191]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [625 1234]))                  
                :type "namespace")
                nil [607 1235]))          
      :file "reverse_fold.hpp"
      :pointmax 1283
      :fsize 1282
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1214 . 1231) (symbol 1193 . 1214) (number 1215 . 1216) (semantic-list 1144 . 1188) (symbol 1116 . 1144) (semantic-list 1160 . 1187) (number 1145 . 1146) (punctuation 1098 . 1099) (punctuation 1097 . 1098) (punctuation 1096 . 1097) (symbol 1078 . 1087) (punctuation 1076 . 1077) (symbol 1057 . 1067) (punctuation 1055 . 1056) (symbol 1041 . 1046) (punctuation 1039 . 1040) (symbol 1026 . 1030) (punctuation 1025 . 1026) (punctuation 1024 . 1025) (punctuation 1023 . 1024) (symbol 1015 . 1023) (punctuation 1014 . 1015) (symbol 1011 . 1014) (TYPENAME 1002 . 1010) (punctuation 1000 . 1001) (symbol 987 . 991) (punctuation 986 . 987) (punctuation 985 . 986) (punctuation 984 . 985) (symbol 976 . 984) (punctuation 975 . 976) (symbol 970 . 975) (TYPENAME 961 . 969) (punctuation 959 . 960) (symbol 945 . 950) (punctuation 944 . 945) (punctuation 943 . 944) (punctuation 942 . 943) (symbol 934 . 942) (punctuation 933 . 934) (symbol 926 . 933) (punctuation 925 . 926) (punctuation 924 . 925) (symbol 921 . 924) (punctuation 920 . 921) (punctuation 919 . 920) (symbol 914 . 919) (punctuation 913 . 914) (punctuation 912 . 913) (punctuation 900 . 901) (symbol 883 . 900) (punctuation 882 . 883) (punctuation 881 . 882) (symbol 878 . 881) (TYPENAME 869 . 877) (TYPEDEF 861 . 868) (punctuation 833 . 834) (punctuation 827 . 828) (number 826 . 827) (punctuation 825 . 826) (symbol 822 . 825) (punctuation 820 . 821) (symbol 810 . 819) (TYPENAME 801 . 809) (punctuation 799 . 800) (semantic-list 782 . 794) (symbol 760 . 782) (TYPENAME 751 . 759) (punctuation 749 . 750) (semantic-list 737 . 744) (symbol 715 . 737) (TYPENAME 706 . 714) (punctuation 704 . 705) (semantic-list 689 . 699) (symbol 667 . 689) (TYPENAME 658 . 666) (punctuation 650 . 651) (TEMPLATE 642 . 650))
      :lexical-table 
        '(("BOOST_MPL_REVERSE_FOLD_HPP_INCLUDED")
          )
)
    (semanticdb-table "eval_if.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_EVAL_IF_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [373 400])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [401 438])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [439 483])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [484 525])
            ("boost/mpl/aux_/config/gcc.hpp" include (:system-flag t) nil [526 566])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [567 614])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("eval_if" type
                               (:superclasses 
                                  ( ("if_::type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [792 1172])
                            ("eval_if_c" type
                               (:template 
                                  ( ("bool" type nil nil nil)
                                    ("F1" type (:type "class") nil nil)
                                    ("F2" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("if_c::type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1278 1673]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [634 1755]))                  
                :type "namespace")
                nil [616 1755]))          
      :file "eval_if.hpp"
      :pointmax 1755
      :fsize 1754
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1696 . 1708) (symbol 1675 . 1696) (number 1697 . 1698) (semantic-list 1148 . 1169) (symbol 1120 . 1148) (semantic-list 1159 . 1168) (number 1149 . 1150) (punctuation 790 . 791) (semantic-list 781 . 785) (symbol 759 . 781) (TYPENAME 750 . 758) (punctuation 748 . 749) (semantic-list 739 . 743) (symbol 717 . 739) (TYPENAME 708 . 716) (punctuation 706 . 707) (semantic-list 698 . 701) (symbol 676 . 698) (TYPENAME 667 . 675) (punctuation 659 . 660) (TEMPLATE 651 . 659))
      :lexical-table 
        '(("BOOST_MPL_EVAL_IF_HPP_INCLUDED")
          )
)
    (semanticdb-table "identity.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_IDENTITY_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [377 414])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [415 459])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("identity" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [575 590]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [553 644])
                            ("make_identity" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("identity" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [730 755]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [703 814]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [479 907]))                  
                :type "namespace")
                nil [461 908]))          
      :file "identity.hpp"
      :pointmax 952
      :fsize 951
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 886 . 904) (symbol 858 . 886) (number 887 . 888) (semantic-list 844 . 857) (symbol 816 . 844) (number 845 . 846) (semantic-list 788 . 811) (symbol 760 . 788) (semantic-list 807 . 810) (number 789 . 790) (punctuation 701 . 702) (semantic-list 693 . 696) (symbol 671 . 693) (TYPENAME 662 . 670) (punctuation 654 . 655) (TEMPLATE 646 . 654) (semantic-list 623 . 641) (symbol 595 . 623) (semantic-list 637 . 640) (number 624 . 625) (punctuation 551 . 552) (semantic-list 543 . 546) (symbol 521 . 543) (TYPENAME 512 . 520) (punctuation 504 . 505) (TEMPLATE 496 . 504))
      :lexical-table 
        '(("BOOST_MPL_IDENTITY_HPP_INCLUDED")
          )
)
    (semanticdb-table "protect.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_PROTECT_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/aux_/arity.hpp" include (:system-flag t) nil [405 440])
            ("boost/mpl/aux_/config/dtp.hpp" include (:system-flag t) nil [441 481])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [482 521])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [522 559])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("protect" type
                               (:superclasses 
                                  ( ("T" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("type" type
                                       (:typedef ("protect" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [783 804]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [675 814]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [579 1194]))                  
                :type "namespace")
                nil [561 1195]))          
      :file "protect.hpp"
      :pointmax 1238
      :fsize 1237
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1169 . 1184) (symbol 1133 . 1169) (number 1173 . 1174) (number 1170 . 1171) (semantic-list 1069 . 1081) (symbol 1043 . 1069) (number 1070 . 1071) (punctuation 673 . 674) (number 667 . 668) (punctuation 665 . 666) (symbol 657 . 664) (INT 653 . 656) (punctuation 651 . 652) (semantic-list 643 . 646) (symbol 621 . 643) (TYPENAME 612 . 620) (punctuation 604 . 605) (TEMPLATE 596 . 604))
      :lexical-table 
        '(("BOOST_MPL_PROTECT_HPP_INCLUDED")
          )
)
    (semanticdb-table "lambda.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_LAMBDA_HPP_INCLUDED" variable (:constant-flag t) nil [48 77])
            ("boost/mpl/lambda_fwd.hpp" include (:system-flag t) nil [373 408])
            ("boost/mpl/bind.hpp" include (:system-flag t) nil [409 438])
            ("boost/mpl/aux_/config/lambda.hpp" include (:system-flag t) nil [439 482])
            ("boost/mpl/aux_/full_lambda.hpp" include (:system-flag t) nil [535 579]))          
      :file "lambda.hpp"
      :pointmax 781
      :fsize 780
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_LAMBDA_HPP_INCLUDED")
          )
)
    (semanticdb-table "apply.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_APPLY_HPP_INCLUDED" variable (:constant-flag t) nil [103 131])
            ("boost/mpl/apply_fwd.hpp" include (:system-flag t) nil [470 507])
            ("boost/mpl/apply_wrap.hpp" include (:system-flag t) nil [508 546])
            ("boost/mpl/placeholders.hpp" include (:system-flag t) nil [547 587])
            ("boost/mpl/lambda.hpp" include (:system-flag t) nil [588 622])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [623 658])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [659 706])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [715 768])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [882 911])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [922 975]))          
      :file "apply.hpp"
      :pointmax 6088
      :fsize 6087
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 839 . 869) (symbol 832 . 839) (punctuation 831 . 832) (punctuation 829 . 830) (punctuation 828 . 829))
      :lexical-table 
        '(("BOOST_MPL_APPLY_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "apply" 912 . 917) (punctuation "." 917 . 918) (symbol "hpp" 918 . 921)))
          )
)
    (semanticdb-table "push_back_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_PUSH_BACK_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("push_back_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [422 469])
                            ("push_back" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [470 529]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [405 532]))                  
                :type "namespace")
                nil [387 533]))          
      :file "push_back_fwd.hpp"
      :pointmax 582
      :fsize 581
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_PUSH_BACK_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "at_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_AT_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [48 77])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("at_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [408 448])
                            ("at" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil)
                                    ("N" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [449 501]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [391 504]))                  
                :type "namespace")
                nil [373 505]))          
      :file "at_fwd.hpp"
      :pointmax 547
      :fsize 546
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AT_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "long.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_LONG_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/long_fwd.hpp" include (:system-flag t) nil [369 402])
            ("AUX_WRAPPER_VALUE_TYPE" variable (:constant-flag t) nil [412 434])
            ("boost/mpl/aux_/integral_wrapper.hpp" include (:system-flag t) nil [440 486]))          
      :file "long.hpp"
      :pointmax 526
      :fsize 525
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("AUX_WRAPPER_VALUE_TYPE" . ((LONG "long" 435 . 439)))
          ("BOOST_MPL_LONG_HPP_INCLUDED")
          )
)
    (semanticdb-table "size_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_SIZE_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("size_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [412 454])
                            ("size" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [455 497]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [395 500]))                  
                :type "namespace")
                nil [377 501]))          
      :file "size_fwd.hpp"
      :pointmax 545
      :fsize 544
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_SIZE_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "int_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_INT_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [375 416])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [417 456])
            ("int_" type
               (:prototype t
                :type "struct")
                nil [544 556]))          
      :file "int_fwd.hpp"
      :pointmax 679
      :fsize 678
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 630 . 636) (symbol 600 . 630) (symbol 558 . 599) (punctuation 542 . 543) (semantic-list 533 . 541) (symbol 510 . 533) (punctuation 508 . 509) (TEMPLATE 500 . 508) (symbol 458 . 498))
      :lexical-table 
        '(("BOOST_MPL_INT_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "bool_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_BOOL_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [377 418])
            ("bool_" type
               (:template 
                  ( ("bool" type nil nil nil))                  
                :type "struct"
                :prototype t)
                nil [462 495])
            ("true_" type
               (:typedef ("bool_" type
                     (:template-specifier 
                        ( ("true" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [509 535])
            ("false_" type
               (:typedef ("bool_" type
                     (:template-specifier 
                        ( ("false" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [536 564]))          
      :file "bool_fwd.hpp"
      :pointmax 767
      :fsize 766
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 715 . 723) (symbol 685 . 715) (semantic-list 677 . 684) (symbol 647 . 677) (semantic-list 639 . 646) (symbol 609 . 639) (symbol 566 . 607) (symbol 420 . 460))
      :lexical-table 
        '(("BOOST_MPL_BOOL_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "integral_c_tag.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_INTEGRAL_C_TAG_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [385 426])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [427 479])
            ("integral_c_tag" type
               (:members 
                  ( ("BOOST_STATIC_CONSTANT" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [568 572])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [573 582]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [546 584]))                  
                :type "struct")
                nil [522 587]))          
      :file "integral_c_tag.hpp"
      :pointmax 726
      :fsize 725
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 660 . 676) (symbol 630 . 660) (symbol 588 . 629) (symbol 481 . 521))
      :lexical-table 
        '(("BOOST_MPL_INTEGRAL_C_TAG_HPP_INCLUDED")
          )
)
    (semanticdb-table "lambda_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_LAMBDA_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/void_fwd.hpp" include (:system-flag t) nil [381 414])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [415 447])
            ("boost/mpl/aux_/config/lambda.hpp" include (:system-flag t) nil [448 491])
            ("boost/mpl/int.hpp" include (:system-flag t) nil [545 576])
            ("boost/mpl/aux_/lambda_arity_param.hpp" include (:system-flag t) nil [577 628])
            ("boost/mpl/aux_/template_arity_fwd.hpp" include (:system-flag t) nil [629 680])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("lambda" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [896 910]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [700 913]))                  
                :type "namespace")
                nil [682 914]))          
      :file "lambda_fwd.hpp"
      :pointmax 1202
      :fsize 1201
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((punctuation 894 . 895) (semantic-list 813 . 889) (symbol 781 . 813) (punctuation 878 . 879) (punctuation 846 . 847) (symbol 771 . 776) (punctuation 878 . 879) (punctuation 846 . 847) (punctuation 769 . 770) (symbol 765 . 768) (TYPENAME 756 . 764) (punctuation 754 . 755) (symbol 747 . 749) (punctuation 745 . 746) (symbol 743 . 744) (TYPENAME 734 . 742) (punctuation 725 . 726) (TEMPLATE 717 . 725))
      :lexical-table 
        '(("BOOST_MPL_LAMBDA_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "sequence_tag_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_SEQUENCE_TAG_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [58 97])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("nested_begin_end_tag" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [428 456])
                            ("non_sequence_tag" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [457 481])
                            ("sequence_tag" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [483 533]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [411 536]))                  
                :type "namespace")
                nil [393 537]))          
      :file "sequence_tag_fwd.hpp"
      :pointmax 589
      :fsize 588
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_SEQUENCE_TAG_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "begin_end.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_BEGIN_END_HPP_INCLUDED" variable (:constant-flag t) nil [51 83])
            ("boost/mpl/begin_end_fwd.hpp" include (:system-flag t) nil [379 417])
            ("boost/mpl/aux_/begin_end_impl.hpp" include (:system-flag t) nil [418 462])
            ("boost/mpl/sequence_tag.hpp" include (:system-flag t) nil [463 500])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [501 538])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [539 583])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("begin" type
                               (:members 
                                  ( ("tag_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [901 911])
                                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [990 1000]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [841 1057])
                            ("end" type
                               (:members 
                                  ( ("tag_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1181 1191])
                                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1268 1278]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [1123 1333]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [603 1399]))                  
                :type "namespace")
                nil [585 1400]))          
      :file "begin_end.hpp"
      :pointmax 1445
      :fsize 1444
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1388 . 1396) (symbol 1367 . 1388) (number 1389 . 1390) (semantic-list 1356 . 1366) (symbol 1335 . 1356) (number 1357 . 1358) (semantic-list 1312 . 1330) (symbol 1284 . 1312) (semantic-list 1319 . 1329) (number 1313 . 1314) (punctuation 1267 . 1268) (punctuation 1266 . 1267) (punctuation 1265 . 1266) (symbol 1256 . 1264) (punctuation 1254 . 1255) (symbol 1249 . 1254) (TEMPLATE 1240 . 1248) (punctuation 1239 . 1240) (punctuation 1238 . 1239) (punctuation 1228 . 1229) (symbol 1223 . 1227) (punctuation 1221 . 1222) (symbol 1213 . 1221) (TYPENAME 1204 . 1212) (TYPEDEF 1196 . 1203) (punctuation 1180 . 1181) (punctuation 1179 . 1180) (punctuation 1178 . 1179) (symbol 1170 . 1178) (punctuation 1169 . 1170) (symbol 1157 . 1169) (TYPENAME 1148 . 1156) (TYPEDEF 1140 . 1147) (punctuation 1121 . 1122) (semantic-list 1106 . 1116) (symbol 1084 . 1106) (TYPENAME 1075 . 1083) (punctuation 1067 . 1068) (TEMPLATE 1059 . 1067) (semantic-list 1034 . 1054) (symbol 1006 . 1034) (semantic-list 1043 . 1053) (number 1035 . 1036) (punctuation 989 . 990) (punctuation 988 . 989) (punctuation 987 . 988) (symbol 978 . 986) (punctuation 976 . 977) (symbol 971 . 976) (TEMPLATE 962 . 970) (punctuation 961 . 962) (punctuation 960 . 961) (punctuation 950 . 951) (symbol 945 . 949) (punctuation 943 . 944) (symbol 933 . 943) (TYPENAME 924 . 932) (TYPEDEF 916 . 923) (punctuation 900 . 901) (punctuation 899 . 900) (punctuation 898 . 899) (symbol 890 . 898) (punctuation 889 . 890) (symbol 877 . 889) (TYPENAME 868 . 876) (TYPEDEF 860 . 867) (punctuation 839 . 840) (semantic-list 824 . 834) (symbol 802 . 824) (TYPENAME 793 . 801) (punctuation 785 . 786) (TEMPLATE 777 . 785))
      :lexical-table 
        '(("BOOST_MPL_BEGIN_END_HPP_INCLUDED")
          )
)
    (semanticdb-table "find.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_FIND_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/find_if.hpp" include (:system-flag t) nil [369 401])
            ("boost/mpl/same_as.hpp" include (:system-flag t) nil [402 434])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [435 472])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [473 517])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("find" type
                               (:superclasses 
                                  ( ("find_if" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [659 766]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [537 801]))                  
                :type "namespace")
                nil [519 802]))          
      :file "find.hpp"
      :pointmax 842
      :fsize 841
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 789 . 798) (symbol 768 . 789) (number 790 . 791) (semantic-list 742 . 763) (symbol 714 . 742) (semantic-list 750 . 762) (number 743 . 744) (punctuation 657 . 658) (semantic-list 649 . 652) (symbol 627 . 649) (TYPENAME 618 . 626) (punctuation 616 . 617) (semantic-list 601 . 611) (symbol 579 . 601) (TYPENAME 570 . 578) (punctuation 562 . 563) (TEMPLATE 554 . 562))
      :lexical-table 
        '(("BOOST_MPL_FIND_HPP_INCLUDED")
          )
)
    (semanticdb-table "arg_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_ARG_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [410 451])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [452 491])
            ("arg" type
               (:prototype t
                :type "struct")
                nil [579 590]))          
      :file "arg_fwd.hpp"
      :pointmax 712
      :fsize 711
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 664 . 669) (symbol 634 . 664) (symbol 592 . 633) (punctuation 577 . 578) (semantic-list 568 . 576) (symbol 545 . 568) (punctuation 543 . 544) (TEMPLATE 535 . 543) (symbol 493 . 533))
      :lexical-table 
        '(("BOOST_MPL_ARG_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "logical.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_LOGICAL_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/or.hpp" include (:system-flag t) nil [375 402])
            ("boost/mpl/and.hpp" include (:system-flag t) nil [403 431])
            ("boost/mpl/not.hpp" include (:system-flag t) nil [432 460]))          
      :file "logical.hpp"
      :pointmax 503
      :fsize 502
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_LOGICAL_HPP_INCLUDED")
          )
)
    (semanticdb-table "always.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_ALWAYS_HPP_INCLUDED" variable (:constant-flag t) nil [48 77])
            ("boost/mpl/aux_/preprocessor/default_params.hpp" include (:system-flag t) nil [373 430])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [431 463])
            ("boost/mpl/aux_/arity_spec.hpp" include (:system-flag t) nil [464 504])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("always" type
                               (:template 
                                  ( ("Value" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("apply" type
                                       (:members 
                                          ( ("type" type
                                               (:typedef ("Value" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [727 746]))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [700 753]))                                  )
                                (reparse-symbol namespacesubparts) [541 756]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [524 796]))                  
                :type "namespace")
                nil [506 797]))          
      :file "always.hpp"
      :pointmax 839
      :fsize 838
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 782 . 793) (symbol 758 . 782) (number 783 . 784) (punctuation 694 . 695) (semantic-list 633 . 685) (symbol 606 . 633) (punctuation 596 . 597) (TEMPLATE 588 . 596))
      :lexical-table 
        '(("BOOST_MPL_ALWAYS_HPP_INCLUDED")
          )
)
    (semanticdb-table "pair.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_PAIR_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/aux_/msvc_eti_base.hpp" include (:system-flag t) nil [369 412])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [413 450])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [451 495])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [496 536])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("pair" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("pair" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [691 709])
                                    ("first" type
                                       (:typedef ("T1" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [714 731])
                                    ("second" type
                                       (:typedef ("T2" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [736 754]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [673 807])
                            ("first" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("P::first" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [929 960]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [866 1078])
                            ("second" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("P::second" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [1201 1233]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [1137 1353]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [556 1461]))                  
                :type "namespace")
                nil [538 1462]))          
      :file "pair.hpp"
      :pointmax 1502
      :fsize 1501
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1447 . 1458) (symbol 1426 . 1447) (number 1448 . 1449) (semantic-list 1415 . 1425) (symbol 1394 . 1415) (number 1416 . 1417) (semantic-list 1384 . 1393) (symbol 1356 . 1384) (number 1385 . 1386) (semantic-list 1336 . 1350) (symbol 1308 . 1336) (semantic-list 1346 . 1349) (number 1337 . 1338) (punctuation 1135 . 1136) (semantic-list 1127 . 1130) (symbol 1105 . 1127) (TYPENAME 1096 . 1104) (punctuation 1088 . 1089) (TEMPLATE 1080 . 1088) (semantic-list 1062 . 1075) (symbol 1034 . 1062) (semantic-list 1071 . 1074) (number 1063 . 1064) (punctuation 864 . 865) (semantic-list 856 . 859) (symbol 834 . 856) (TYPENAME 825 . 833) (punctuation 817 . 818) (TEMPLATE 809 . 817) (semantic-list 788 . 804) (symbol 760 . 788) (semantic-list 796 . 803) (number 789 . 790) (punctuation 671 . 672) (semantic-list 662 . 666) (symbol 640 . 662) (TYPENAME 631 . 639) (punctuation 629 . 630) (semantic-list 620 . 624) (symbol 598 . 620) (TYPENAME 589 . 597) (punctuation 581 . 582) (TEMPLATE 573 . 581))
      :lexical-table 
        '(("BOOST_MPL_PAIR_HPP_INCLUDED")
          )
)
    (semanticdb-table "O1_size.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_O1_SIZE_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/O1_size_fwd.hpp" include (:system-flag t) nil [375 411])
            ("boost/mpl/sequence_tag.hpp" include (:system-flag t) nil [412 449])
            ("boost/mpl/aux_/O1_size_impl.hpp" include (:system-flag t) nil [450 492])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [493 530])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [531 575])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [843 922]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [595 960]))                  
                :type "namespace")
                nil [577 961]))          
      :file "O1_size.hpp"
      :pointmax 1004
      :fsize 1003
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 945 . 957) (symbol 924 . 945) (number 946 . 947) (TEMPLATE 834 . 842) (punctuation 833 . 834) (punctuation 832 . 833) (punctuation 822 . 823) (symbol 817 . 821) (punctuation 816 . 817) (punctuation 815 . 816) (punctuation 814 . 815) (symbol 806 . 814) (punctuation 805 . 806) (symbol 793 . 805) (TYPENAME 784 . 792) (punctuation 782 . 783) (symbol 770 . 782) (punctuation 768 . 769) (symbol 756 . 763) (STRUCT 749 . 755) (punctuation 747 . 748) (semantic-list 732 . 742) (symbol 710 . 732) (TYPENAME 701 . 709) (punctuation 693 . 694) (TEMPLATE 685 . 693))
      :lexical-table 
        '(("BOOST_MPL_O1_SIZE_HPP_INCLUDED")
          )
)
    (semanticdb-table "bind.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_BIND_HPP_INCLUDED" variable (:constant-flag t) nil [102 129])
            ("boost/mpl/bind_fwd.hpp" include (:system-flag t) nil [498 534])
            ("boost/mpl/placeholders.hpp" include (:system-flag t) nil [535 575])
            ("boost/mpl/next.hpp" include (:system-flag t) nil [576 608])
            ("boost/mpl/protect.hpp" include (:system-flag t) nil [609 644])
            ("boost/mpl/apply_wrap.hpp" include (:system-flag t) nil [645 683])
            ("boost/mpl/limits/arity.hpp" include (:system-flag t) nil [684 724])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [725 760])
            ("boost/mpl/aux_/arity_spec.hpp" include (:system-flag t) nil [761 804])
            ("boost/mpl/aux_/type_wrapper.hpp" include (:system-flag t) nil [805 850])
            ("boost/mpl/aux_/yes_no.hpp" include (:system-flag t) nil [851 890])
            ("boost/mpl/aux_/config/bind.hpp" include (:system-flag t) nil [1020 1061])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [1062 1114])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [1115 1168])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1416 1445])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1465 1518]))          
      :file "bind.hpp"
      :pointmax 14952
      :fsize 14951
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1239 . 1269) (symbol 1232 . 1239) (punctuation 1231 . 1232) (punctuation 1229 . 1230) (punctuation 1228 . 1229))
      :lexical-table 
        '(("BOOST_MPL_BIND_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "bind" 1446 . 1450) (punctuation "." 1450 . 1451) (symbol "hpp" 1451 . 1454)))
          )
)
    (semanticdb-table "apply_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_APPLY_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [107 139])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [478 513])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [522 575])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [689 718])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [733 786]))          
      :file "apply_fwd.hpp"
      :pointmax 2664
      :fsize 2663
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 646 . 676) (symbol 639 . 646) (punctuation 638 . 639) (punctuation 636 . 637) (punctuation 635 . 636))
      :lexical-table 
        '(("BOOST_MPL_APPLY_FWD_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "apply_fwd" 719 . 728) (punctuation "." 728 . 729) (symbol "hpp" 729 . 732)))
          )
)
    (semanticdb-table "apply_wrap.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_APPLY_WRAP_HPP_INCLUDED" variable (:constant-flag t) nil [108 141])
            ("boost/mpl/aux_/arity.hpp" include (:system-flag t) nil [480 518])
            ("boost/mpl/aux_/has_apply.hpp" include (:system-flag t) nil [519 561])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [562 597])
            ("boost/mpl/aux_/msvc_never_true.hpp" include (:system-flag t) nil [598 646])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [655 708])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [822 851])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [867 920]))          
      :file "apply_wrap.hpp"
      :pointmax 6178
      :fsize 6177
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 779 . 809) (symbol 772 . 779) (punctuation 771 . 772) (punctuation 769 . 770) (punctuation 768 . 769))
      :lexical-table 
        '(("BOOST_MPL_APPLY_WRAP_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "apply_wrap" 852 . 862) (punctuation "." 862 . 863) (symbol "hpp" 863 . 866)))
          )
)
    (semanticdb-table "placeholders.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_PLACEHOLDERS_HPP_INCLUDED" variable (:constant-flag t) nil [110 145])
            ("boost/mpl/arg.hpp" include (:system-flag t) nil [520 551])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [552 596])
            ("BOOST_MPL_AUX_ARG_ADL_BARRIER_DECL" variable (:constant-flag t) nil [669 703])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [875 928])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1039 1068])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1086 1139]))          
      :file "placeholders.hpp"
      :pointmax 2451
      :fsize 2450
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 996 . 1026) (symbol 989 . 996) (punctuation 988 . 989) (punctuation 986 . 987) (punctuation 985 . 986))
      :lexical-table 
        '(("BOOST_MPL_AUX_ARG_ADL_BARRIER_DECL" (spp-arg-list ("type") 703 . 709) . 
              ((USING "using" 720 . 725) (punctuation ":" 726 . 727) (punctuation ":" 727 . 728) (symbol "BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE" 728 . 763) (punctuation ":" 763 . 764) (punctuation ":" 764 . 765) (symbol "type" 765 . 769) (punctuation ";" 769 . 770)))
          ("BOOST_MPL_PLACEHOLDERS_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "placeholders" 1069 . 1081) (punctuation "." 1081 . 1082) (symbol "hpp" 1082 . 1085)))
          )
)
    (semanticdb-table "back_inserter.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_BACK_INSERTER_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost/mpl/push_back.hpp" include (:system-flag t) nil [425 459])
            ("boost/mpl/inserter.hpp" include (:system-flag t) nil [460 493])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("back_inserter" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("inserter" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [530 634]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [513 637]))                  
                :type "namespace")
                nil [495 638]))          
      :file "back_inserter.hpp"
      :pointmax 687
      :fsize 686
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_BACK_INSERTER_HPP_INCLUDED")
          )
)
    (semanticdb-table "front_inserter.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_FRONT_INSERTER_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost/mpl/push_front.hpp" include (:system-flag t) nil [427 462])
            ("boost/mpl/inserter.hpp" include (:system-flag t) nil [463 496])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("front_inserter" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("inserter" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [533 639]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [516 642]))                  
                :type "namespace")
                nil [498 643]))          
      :file "front_inserter.hpp"
      :pointmax 693
      :fsize 692
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_FRONT_INSERTER_HPP_INCLUDED")
          )
)
    (semanticdb-table "push_front.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_PUSH_FRONT_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/push_front_fwd.hpp" include (:system-flag t) nil [381 420])
            ("boost/mpl/aux_/push_front_impl.hpp" include (:system-flag t) nil [421 466])
            ("boost/mpl/sequence_tag.hpp" include (:system-flag t) nil [467 504])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [505 542])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [543 587])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [829 913])
                            ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [1089 1173]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [607 1255]))                  
                :type "namespace")
                nil [589 1256]))          
      :file "push_front.hpp"
      :pointmax 1302
      :fsize 1301
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1233 . 1252) (symbol 1212 . 1233) (number 1234 . 1235) (semantic-list 1196 . 1211) (symbol 1175 . 1196) (number 1197 . 1198) (TEMPLATE 1080 . 1088) (punctuation 1079 . 1080) (punctuation 1078 . 1079) (punctuation 1068 . 1069) (symbol 1063 . 1067) (punctuation 1062 . 1063) (punctuation 1061 . 1062) (punctuation 1060 . 1061) (symbol 1052 . 1060) (punctuation 1051 . 1052) (symbol 1039 . 1051) (TYPENAME 1030 . 1038) (punctuation 1028 . 1029) (symbol 1009 . 1028) (punctuation 1007 . 1008) (symbol 988 . 1002) (STRUCT 981 . 987) (punctuation 979 . 980) (semantic-list 964 . 974) (symbol 942 . 964) (TYPENAME 933 . 941) (punctuation 924 . 925) (TEMPLATE 916 . 924) (TEMPLATE 820 . 828) (punctuation 819 . 820) (punctuation 818 . 819) (punctuation 808 . 809) (symbol 803 . 807) (punctuation 802 . 803) (punctuation 801 . 802) (punctuation 800 . 801) (symbol 792 . 800) (punctuation 791 . 792) (symbol 779 . 791) (TYPENAME 770 . 778) (punctuation 768 . 769) (symbol 753 . 768) (punctuation 751 . 752) (symbol 736 . 746) (STRUCT 729 . 735) (punctuation 727 . 728) (semantic-list 719 . 722) (symbol 697 . 719) (TYPENAME 688 . 696) (punctuation 686 . 687) (semantic-list 671 . 681) (symbol 649 . 671) (TYPENAME 640 . 648) (punctuation 632 . 633) (TEMPLATE 624 . 632))
      :lexical-table 
        '(("BOOST_MPL_PUSH_FRONT_HPP_INCLUDED")
          )
)
    (semanticdb-table "clear.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_CLEAR_HPP_INCLUDED" variable (:constant-flag t) nil [47 75])
            ("boost/mpl/clear_fwd.hpp" include (:system-flag t) nil [371 405])
            ("boost/mpl/aux_/clear_impl.hpp" include (:system-flag t) nil [406 446])
            ("boost/mpl/sequence_tag.hpp" include (:system-flag t) nil [447 484])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [485 522])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [523 567])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [758 833]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [587 869]))                  
                :type "namespace")
                nil [569 870]))          
      :file "clear.hpp"
      :pointmax 911
      :fsize 910
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 856 . 866) (symbol 835 . 856) (number 857 . 858) (TEMPLATE 749 . 757) (punctuation 748 . 749) (punctuation 747 . 748) (punctuation 737 . 738) (symbol 732 . 736) (punctuation 731 . 732) (punctuation 730 . 731) (punctuation 729 . 730) (symbol 721 . 729) (punctuation 720 . 721) (symbol 708 . 720) (TYPENAME 699 . 707) (punctuation 697 . 698) (symbol 687 . 697) (punctuation 685 . 686) (symbol 675 . 680) (STRUCT 668 . 674) (punctuation 666 . 667) (semantic-list 651 . 661) (symbol 629 . 651) (TYPENAME 620 . 628) (punctuation 612 . 613) (TEMPLATE 604 . 612))
      :lexical-table 
        '(("BOOST_MPL_CLEAR_HPP_INCLUDED")
          )
)
    (semanticdb-table "assert.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_ASSERT_HPP_INCLUDED" variable (:constant-flag t) nil [48 77])
            ("boost/mpl/not.hpp" include (:system-flag t) nil [373 401])
            ("boost/mpl/aux_/value_wknd.hpp" include (:system-flag t) nil [402 442])
            ("boost/mpl/aux_/nested_type_wknd.hpp" include (:system-flag t) nil [443 489])
            ("boost/mpl/aux_/yes_no.hpp" include (:system-flag t) nil [490 526])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [527 559])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [560 601])
            ("boost/mpl/aux_/config/nttp.hpp" include (:system-flag t) nil [603 644])
            ("boost/mpl/aux_/config/dtp.hpp" include (:system-flag t) nil [645 685])
            ("boost/mpl/aux_/config/gcc.hpp" include (:system-flag t) nil [686 726])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [727 768])
            ("boost/mpl/aux_/config/gpu.hpp" include (:system-flag t) nil [769 809])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [810 862])
            ("boost/mpl/aux_/config/pp_counter.hpp" include (:system-flag t) nil [863 910])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [911 958])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [960 997])
            ("boost/config.hpp" include (:system-flag t) nil [999 1026])
            ("cstddef" include (:system-flag t) nil [1070 1088])
            ("BOOST_MPL_AUX_ASSERT_CONSTANT" variable (:constant-flag t) nil [2055 2084])
            ("failed" type (:type "struct") nil [2176 2193])
            ("AUX778076_ASSERT_ARG" variable (:constant-flag t) nil [2488 2508])
            ("assert" type
               (:template 
                  ( ("bool" type nil nil nil))                  
                :type "struct"
                :members 
                  ( ("type" type
                       (:typedef ("void")
                        :pointer 1
                        :type "typedef")
                        (reparse-symbol classsubparts) [2565 2584]))                  )
                nil [2522 2587])
            ("assert" type
               (:type "struct"
                :members 
                  ( ("type" variable (:type "int") (reparse-symbol classsubparts) [2668 2673]))                  
                :template-specifier 
                  ( ("false" type nil nil nil))                  )
                nil [2588 2676])
            ("assertion_failed" function
               (:template 
                  ( ("bool" type nil nil nil))                  
                :type "int"
                :arguments 
                  ( ("" variable
                       (:typemodifiers ("typename")
                        :type ("assert" type
                             (:template-specifier 
                                ( ("C" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2719 2738])
                    ("" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2739 2745]))                  
                :prototype-flag t)
                nil [2678 2746])
            ("assertion" type
               (:template 
                  ( ("bool" type nil nil nil))                  
                :type "struct"
                :members 
                  ( ("failed" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("" variable (:type ("assert" type
                                 (:template-specifier 
                                    ( ("false" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [2809 2824]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2790 2825]))                  )
                nil [2748 2828])
            ("assertion" type
               (:type "struct"
                :members 
                  ( ("failed" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [2889 2896]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2870 2897]))                  
                :template-specifier 
                  ( ("true" type nil nil nil))                  )
                nil [2830 2900])
            ("assert_" type
               (:members 
                  ( ("types" type
                       (:template 
                          ( ("T1" type (:type "class") nil nil)
                            ("T2" type (:type "class") nil nil)
                            ("T3" type (:type "class") nil nil)
                            ("T4" type (:type "class") nil nil))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [2993 3087])
                    ("arg" variable
                       (:typemodifiers ("static")
                        :type ("assert_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3099 3124])
                    ("relations" type
                       (:members 
                          ( ("equal" variable
                               (:constant-flag t
                                :default-value (3154 3155)
                                :type "int")
                                (reparse-symbol enumsubparts) [3146 3155])
                            ("not_equal" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3157 3167])
                            ("greater" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3168 3176])
                            ("greater_equal" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3177 3191])
                            ("less" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3192 3197])
                            ("less_equal" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3198 3210]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [3129 3211]))                  
                :type "struct")
                nil [2902 3214])
            ("==" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3289 3296])
                    ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3297 3305]))                  
                :type "bool")
                nil [3272 3306])
            ("!=" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3324 3331])
                    ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3332 3340]))                  
                :type "bool")
                nil [3307 3341])
            (">" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3358 3365])
                    ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3366 3374]))                  
                :type "bool")
                nil [3342 3375])
            (">=" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3393 3400])
                    ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3401 3409]))                  
                :type "bool")
                nil [3376 3410])
            ("<" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3427 3434])
                    ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3435 3443]))                  
                :type "bool")
                nil [3411 3444])
            ("<=" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3462 3469])
                    ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3470 3478]))                  
                :type "bool")
                nil [3445 3479])
            ("assert_relation" type (:type "struct") nil [3775 3801])
            ("BOOST_MPL_AUX_ASSERT_RELATION" variable (:constant-flag t) nil [3813 3842])
            ("assert_arg_pred_impl" type
               (:template 
                  ( ("bool" type nil nil nil))                  
                :type "struct"
                :members 
                  ( ("type" type
                       (:typedef ("int")
                        :type "typedef")
                        (reparse-symbol classsubparts) [5416 5433]))                  )
                nil [5369 5436])
            ("assert_arg_pred_impl" type
               (:type "struct"
                :members 
                  ( ("type" type
                       (:typedef ("void")
                        :pointer 1
                        :type "typedef")
                        (reparse-symbol classsubparts) [5484 5503]))                  
                :template-specifier 
                  ( ("true" type nil nil nil))                  )
                nil [5437 5506])
            ("assert_arg_pred" type
               (:template 
                  ( ("P" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("p_type" type
                       (:typedef ("P::type" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [5560 5592])
                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5653 5663]))                  )
                nil [5508 5666])
            ("assert_arg_pred_not" type
               (:template 
                  ( ("P" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("p_type" type
                       (:typedef ("P::type" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [5724 5756])
                    ("BOOST_STATIC_CONSTANT" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "int")
                        (reparse-symbol classsubparts) [5761 5819])
                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5866 5876]))                  )
                nil [5668 5879])
            ("assert_arg" function
               (:template 
                  ( ("Pred" type (:type "class") nil nil))                  
                :type ("assert" type (:type "class") nil nil)
                :arguments 
                  ( ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Pred" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6286 6291]))                          
                        :type "void")
                        nil nil)
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("assert_arg_pred_not" type
                             (:template-specifier 
                                ( ("Pred" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6293 6328])
                    ("" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6329 6335]))                  
                :prototype-flag t)
                nil [6203 6336])
            ("assert_not_arg" function
               (:template 
                  ( ("Pred" type (:type "class") nil nil))                  
                :type ("assert" type (:type "class") nil nil)
                :arguments 
                  ( ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Pred" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6425 6430]))                          
                        :type "void")
                        nil nil)
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("assert_arg_pred" type
                             (:template-specifier 
                                ( ("Pred" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6432 6463])
                    ("" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6464 6470]))                  
                :prototype-flag t)
                nil [6338 6471])
            ("BOOST_MPL_ASSERT" variable (:constant-flag t) nil [8763 8779])
            ("BOOST_MPL_ASSERT_NOT" variable (:constant-flag t) nil [9458 9478])
            ("BOOST_MPL_ASSERT_RELATION" variable (:constant-flag t) nil [12275 12300])
            ("BOOST_MPL_ASSERT_MSG_IMPL" variable (:constant-flag t) nil [13428 13453])
            ("BOOST_MPL_ASSERT_MSG" variable (:constant-flag t) nil [13969 13989]))          
      :file "assert.hpp"
      :pointmax 14130
      :fsize 14129
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((symbol 7750 . 7791) (punctuation 6463 . 6464) (punctuation 6462 . 6463) (punctuation 6328 . 6329) (punctuation 6327 . 6328) (punctuation 6200 . 6201) (semantic-list 6075 . 6200) (punctuation 6073 . 6074) (punctuation 6072 . 6073) (punctuation 6071 . 6072) (punctuation 6070 . 6071) (punctuation 6069 . 6070) (punctuation 6068 . 6069) (punctuation 6067 . 6068) (punctuation 6066 . 6067) (punctuation 6065 . 6066) (punctuation 6064 . 6065) (punctuation 6063 . 6064) (punctuation 6062 . 6063) (symbol 6055 . 6061) (punctuation 6053 . 6054) (symbol 6048 . 6052) (TYPENAME 6039 . 6047) (punctuation 6037 . 6038) (TEMPLATE 6029 . 6037) (punctuation 6026 . 6027) (semantic-list 5927 . 6026) (punctuation 5925 . 5926) (punctuation 5924 . 5925) (punctuation 5923 . 5924) (punctuation 5922 . 5923) (punctuation 5921 . 5922) (punctuation 5920 . 5921) (punctuation 5919 . 5920) (punctuation 5918 . 5919) (punctuation 5917 . 5918) (punctuation 5916 . 5917) (punctuation 5915 . 5916) (punctuation 5914 . 5915) (symbol 5907 . 5913) (punctuation 5905 . 5906) (symbol 5900 . 5904) (TYPENAME 5891 . 5899) (punctuation 5889 . 5890) (TEMPLATE 5881 . 5889) (punctuation 5865 . 5866) (punctuation 5864 . 5865) (punctuation 5863 . 5864) (symbol 5862 . 5863) (punctuation 5861 . 5862) (symbol 5841 . 5861) (TYPENAME 5832 . 5840) (TYPEDEF 5824 . 5831) (punctuation 5652 . 5653) (punctuation 5651 . 5652) (punctuation 5650 . 5651) (symbol 5644 . 5649) (punctuation 5643 . 5644) (punctuation 5642 . 5643) (symbol 5636 . 5642) (punctuation 5634 . 5635) (symbol 5614 . 5634) (TYPENAME 5605 . 5613) (TYPEDEF 5597 . 5604) (punctuation 3772 . 3773) (semantic-list 3755 . 3771) (semantic-list 3752 . 3755) (BOOL 3747 . 3751) (punctuation 3745 . 3746) (semantic-list 3736 . 3745) (symbol 3713 . 3736) (punctuation 3711 . 3712) (semantic-list 3702 . 3711) (symbol 3679 . 3702) (punctuation 3677 . 3678) (TEMPLATE 3669 . 3677) (punctuation 2738 . 2739) (punctuation 2737 . 2738) (semantic-list 2659 . 2667) (symbol 2639 . 2659) (TYPEDEF 2631 . 2638) (symbol 2134 . 2174))
      :lexical-table 
        '(("BOOST_MPL_ASSERT_HPP_INCLUDED")
          ("BOOST_MPL_ASSERT_MSG_IMPL" (spp-arg-list ("counter" "c" "msg" "types_") 13453 . 13480) . 
              ((STRUCT "struct" 13484 . 13490) (symbol "msg" 13491 . 13494) (punctuation ";" 13494 . 13495) (TYPEDEF "typedef" 13498 . 13505) (STRUCT "struct" 13506 . 13512) (symbol "BOOST_PP_CAT" 13513 . 13525) (semantic-list "(msg,counter)" 13525 . 13538) (punctuation ":" 13539 . 13540) (symbol "boost" 13541 . 13546) (punctuation ":" 13546 . 13547) (punctuation ":" 13547 . 13548) (symbol "mpl" 13548 . 13551) (punctuation ":" 13551 . 13552) (punctuation ":" 13552 . 13553) (symbol "assert_" 13553 . 13560) (semantic-list "{ \\
    static boost::mpl::failed ************ (msg::************ assert_arg()) types_ \\
    { return 0; } \\
}" 13563 . 13673) (symbol "BOOST_PP_CAT" 13674 . 13686) (semantic-list "(mpl_assert_arg,counter)" 13686 . 13710) (punctuation ";" 13710 . 13711) (symbol "BOOST_MPL_AUX_ASSERT_CONSTANT" 13714 . 13743) (semantic-list "( \\
      std::size_t \\
    , BOOST_PP_CAT(mpl_assertion_in_line_,counter) = sizeof( \\
        boost::mpl::assertion_failed<(c)>( BOOST_PP_CAT(mpl_assert_arg,counter)::assert_arg() ) \\
        ) \\
    )" 13743 . 13945)))
          ("BOOST_MPL_ASSERT_NOT" (spp-arg-list ("pred") 9478 . 9484) . ((symbol "BOOST_MPL_AUX_ASSERT_CONSTANT" 9487 . 9516) (semantic-list "( \\
      std::size_t \\
    , BOOST_PP_CAT(mpl_assertion_in_line_,BOOST_MPL_AUX_PP_COUNTER()) = sizeof( \\
          boost::mpl::assertion_failed<false>( \\
              boost::mpl::assert_not_arg( (void (*) pred)0, 1 ) \\
            ) \\
        ) \\
   )" 9516 . 9769)))
          ("BOOST_MPL_AUX_ASSERT_CONSTANT" (spp-arg-list ("T" "expr") 2084 . 2093) . ((symbol "BOOST_STATIC_CONSTANT" 2094 . 2115) (semantic-list "(T, expr)" 2115 . 2124)))
          ("BOOST_MPL_ASSERT_MSG" (spp-arg-list ("c" "msg" "types_") 13989 . 14007) . ((symbol "BOOST_MPL_ASSERT_MSG_IMPL" 14010 . 14035) (semantic-list "( BOOST_MPL_AUX_PP_COUNTER(), c, msg, types_ )" 14035 . 14081)))
          ("BOOST_MPL_ASSERT" (spp-arg-list ("pred") 8779 . 8785) . ((symbol "BOOST_MPL_AUX_ASSERT_CONSTANT" 8788 . 8817) (semantic-list "( \\
      std::size_t \\
    , BOOST_PP_CAT(mpl_assertion_in_line_,BOOST_MPL_AUX_PP_COUNTER()) = sizeof( \\
          boost::mpl::assertion_failed<false>( \\
              boost::mpl::assert_arg( (void (*) pred)0, 1 ) \\
            ) \\
        ) \\
    )" 8817 . 9067)))
          ("BOOST_MPL_ASSERT_RELATION" (spp-arg-list ("x" "rel" "y") 12300 . 12311) . ((symbol "BOOST_MPL_AUX_ASSERT_CONSTANT" 12314 . 12343) (semantic-list "( \\
      std::size_t \\
    , BOOST_PP_CAT(mpl_assertion_in_line_,BOOST_MPL_AUX_PP_COUNTER()) = sizeof( \\
        boost::mpl::assertion_failed<(x rel y)>( (boost::mpl::failed ************ ( \\
            boost::mpl::BOOST_MPL_AUX_ASSERT_RELATION(x,y,(&boost::mpl::operator rel))::************))0 ) \\
        ) \\
    )" 12343 . 12660)))
          ("BOOST_MPL_AUX_ASSERT_RELATION" (spp-arg-list ("x" "y" "r") 3842 . 3851) . 
              ((symbol "assert_relation" 3852 . 3867) (punctuation "<" 3867 . 3868) (symbol "x" 3868 . 3869) (punctuation "," 3869 . 3870) (symbol "y" 3870 . 3871) (punctuation "," 3871 . 3872) (symbol "r" 3872 . 3873) (punctuation ">" 3873 . 3874)))
          )
)
    (semanticdb-table "advance.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_ADVANCE_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/advance_fwd.hpp" include (:system-flag t) nil [375 411])
            ("boost/mpl/less.hpp" include (:system-flag t) nil [412 441])
            ("boost/mpl/negate.hpp" include (:system-flag t) nil [442 473])
            ("boost/mpl/long.hpp" include (:system-flag t) nil [474 503])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [504 531])
            ("boost/mpl/tag.hpp" include (:system-flag t) nil [532 560])
            ("boost/mpl/apply_wrap.hpp" include (:system-flag t) nil [561 596])
            ("boost/mpl/aux_/advance_forward.hpp" include (:system-flag t) nil [597 642])
            ("boost/mpl/aux_/advance_backward.hpp" include (:system-flag t) nil [643 689])
            ("boost/mpl/aux_/value_wknd.hpp" include (:system-flag t) nil [690 730])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [731 768])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [769 808])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("advance_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("apply" type
                                       (:template 
                                          ( ("Iterator" type (:type "class") nil nil)
                                            ("N" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("backward_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1064 1079])
                                            ("offset_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1137 1150])
                                            ("f_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1380 1388])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1441 1451]))                                          )
                                        (reparse-symbol classsubparts) [958 1458]))                                  )
                                (reparse-symbol namespacesubparts) [907 1461])
                            ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [1654 1676])
                            ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [1844 1874]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [828 1912]))                  
                :type "namespace")
                nil [810 1913]))          
      :file "advance.hpp"
      :pointmax 1956
      :fsize 1955
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1897 . 1909) (symbol 1876 . 1897) (number 1898 . 1899) (TEMPLATE 1835 . 1843) (punctuation 1834 . 1835) (punctuation 1833 . 1834) (punctuation 1823 . 1824) (symbol 1818 . 1822) (punctuation 1817 . 1818) (punctuation 1816 . 1817) (punctuation 1815 . 1816) (symbol 1807 . 1815) (punctuation 1806 . 1807) (symbol 1803 . 1806) (TYPENAME 1794 . 1802) (punctuation 1792 . 1793) (symbol 1780 . 1792) (punctuation 1778 . 1779) (symbol 1764 . 1773) (STRUCT 1757 . 1763) (punctuation 1755 . 1756) (semantic-list 1741 . 1750) (symbol 1718 . 1741) (punctuation 1716 . 1717) (symbol 1703 . 1711) (TYPENAME 1694 . 1702) (punctuation 1686 . 1687) (TEMPLATE 1678 . 1686) (TEMPLATE 1645 . 1653) (punctuation 1644 . 1645) (punctuation 1643 . 1644) (punctuation 1633 . 1634) (symbol 1628 . 1632) (punctuation 1627 . 1628) (punctuation 1626 . 1627) (punctuation 1625 . 1626) (symbol 1617 . 1625) (punctuation 1616 . 1617) (symbol 1613 . 1616) (TYPENAME 1604 . 1612) (punctuation 1602 . 1603) (symbol 1590 . 1602) (punctuation 1588 . 1589) (symbol 1576 . 1583) (STRUCT 1569 . 1575) (punctuation 1567 . 1568) (semantic-list 1559 . 1562) (symbol 1537 . 1559) (TYPENAME 1528 . 1536) (punctuation 1526 . 1527) (semantic-list 1511 . 1521) (symbol 1489 . 1511) (TYPENAME 1480 . 1488) (punctuation 1472 . 1473) (TEMPLATE 1464 . 1472) (punctuation 1440 . 1441) (punctuation 1439 . 1440) (punctuation 1438 . 1439) (symbol 1430 . 1438) (punctuation 1429 . 1430) (symbol 1427 . 1429) (punctuation 1426 . 1427) (symbol 1415 . 1426) (TYPENAME 1406 . 1414) (TYPEDEF 1398 . 1405) (punctuation 1379 . 1380) (punctuation 1378 . 1379) (punctuation 1377 . 1378) (punctuation 1363 . 1364) (symbol 1357 . 1362) (punctuation 1356 . 1357) (punctuation 1355 . 1356) (semantic-list 1346 . 1355) (symbol 1322 . 1346) (punctuation 1320 . 1321) (symbol 1305 . 1320) (punctuation 1304 . 1305) (punctuation 1303 . 1304) (symbol 1300 . 1303) (punctuation 1298 . 1299) (punctuation 1284 . 1285) (symbol 1278 . 1283) (punctuation 1277 . 1278) (punctuation 1276 . 1277) (semantic-list 1267 . 1276) (symbol 1243 . 1267) (punctuation 1241 . 1242) (symbol 1225 . 1241) (punctuation 1224 . 1225) (punctuation 1223 . 1224) (symbol 1220 . 1223) (punctuation 1218 . 1219) (symbol 1196 . 1205) (punctuation 1180 . 1181) (symbol 1177 . 1180) (TYPENAME 1168 . 1176) (TYPEDEF 1160 . 1167) (punctuation 1136 . 1137) (punctuation 1135 . 1136) (punctuation 1134 . 1135) (symbol 1132 . 1133) (punctuation 1130 . 1131) (punctuation 1129 . 1130) (symbol 1128 . 1129) (punctuation 1127 . 1128) (symbol 1121 . 1127) (punctuation 1119 . 1120) (symbol 1110 . 1119) (punctuation 1108 . 1109) (symbol 1105 . 1108) (TYPENAME 1096 . 1104) (TYPEDEF 1088 . 1095) (punctuation 1063 . 1064) (punctuation 1062 . 1063) (punctuation 1061 . 1062) (punctuation 1059 . 1060) (number 1058 . 1059) (punctuation 1057 . 1058) (symbol 1052 . 1057) (punctuation 1051 . 1052) (symbol 1050 . 1051) (punctuation 1048 . 1049) (symbol 1044 . 1048) (TYPENAME 1035 . 1043) (TYPEDEF 1027 . 1034))
      :lexical-table 
        '(("BOOST_MPL_ADVANCE_HPP_INCLUDED")
          )
)
    (semanticdb-table "deref.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_DEREF_HPP_INCLUDED" variable (:constant-flag t) nil [47 75])
            ("boost/mpl/aux_/msvc_type.hpp" include (:system-flag t) nil [371 410])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [411 448])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [449 493])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [494 534])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("deref" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("Iterator::type" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [698 735]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [635 862]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [554 898]))                  
                :type "namespace")
                nil [536 899]))          
      :file "deref.hpp"
      :pointmax 940
      :fsize 939
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 885 . 895) (symbol 864 . 885) (number 886 . 887) (semantic-list 839 . 859) (symbol 811 . 839) (semantic-list 848 . 858) (number 840 . 841) (punctuation 633 . 634) (semantic-list 618 . 628) (symbol 596 . 618) (TYPENAME 587 . 595) (punctuation 579 . 580) (TEMPLATE 571 . 579))
      :lexical-table 
        '(("BOOST_MPL_DEREF_HPP_INCLUDED")
          )
)
    (semanticdb-table "long_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_LONG_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [377 418])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [419 458])
            ("long_" type
               (:prototype t
                :type "struct")
                nil [547 560]))          
      :file "long_fwd.hpp"
      :pointmax 685
      :fsize 684
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 634 . 641) (symbol 604 . 634) (symbol 562 . 603) (punctuation 545 . 546) (semantic-list 535 . 544) (symbol 512 . 535) (punctuation 510 . 511) (TEMPLATE 502 . 510) (symbol 460 . 500))
      :lexical-table 
        '(("BOOST_MPL_LONG_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "distance.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_DISTANCE_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost/mpl/distance_fwd.hpp" include (:system-flag t) nil [377 414])
            ("boost/mpl/iter_fold.hpp" include (:system-flag t) nil [415 449])
            ("boost/mpl/iterator_range.hpp" include (:system-flag t) nil [450 489])
            ("boost/mpl/long.hpp" include (:system-flag t) nil [490 519])
            ("boost/mpl/next.hpp" include (:system-flag t) nil [520 549])
            ("boost/mpl/tag.hpp" include (:system-flag t) nil [550 578])
            ("boost/mpl/apply_wrap.hpp" include (:system-flag t) nil [579 614])
            ("boost/mpl/aux_/msvc_eti_base.hpp" include (:system-flag t) nil [615 658])
            ("boost/mpl/aux_/value_wknd.hpp" include (:system-flag t) nil [659 699])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [700 737])
            ("boost/mpl/aux_/config/forwarding.hpp" include (:system-flag t) nil [738 785])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [786 838])
            ("boost" type
               (:members 
                  ( ("mpl" type (:type "namespace") (reparse-symbol namespacesubparts) [859 1985]))                  
                :type "namespace")
                nil [841 2029]))          
      :file "distance.hpp"
      :pointmax 2029
      :fsize 2028
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 984 . 1984) (symbol 970 . 983) (STRUCT 963 . 969) (semantic-list 1968 . 1981) (symbol 1947 . 1968) (number 1969 . 1970) (TEMPLATE 1852 . 1860) (punctuation 1851 . 1852) (punctuation 1850 . 1851) (punctuation 1840 . 1841) (symbol 1835 . 1839) (punctuation 1834 . 1835) (punctuation 1833 . 1834) (punctuation 1832 . 1833) (symbol 1827 . 1832) (punctuation 1826 . 1827) (symbol 1823 . 1826) (TYPENAME 1814 . 1822) (punctuation 1812 . 1813) (symbol 1799 . 1812) (punctuation 1797 . 1798) (symbol 1784 . 1792) (STRUCT 1777 . 1783) (punctuation 1775 . 1776) (semantic-list 1764 . 1770) (symbol 1742 . 1764) (TYPENAME 1733 . 1741) (punctuation 1731 . 1732) (semantic-list 1719 . 1726) (symbol 1697 . 1719) (TYPENAME 1688 . 1696) (punctuation 1680 . 1681) (TEMPLATE 1672 . 1680) (punctuation 1669 . 1670) (semantic-list 1260 . 1669) (punctuation 1254 . 1255) (symbol 1249 . 1253) (punctuation 1248 . 1249) (punctuation 1247 . 1248) (punctuation 1246 . 1247) (punctuation 1232 . 1233) (punctuation 1231 . 1232) (symbol 1227 . 1231) (punctuation 1225 . 1226) (punctuation 1211 . 1212) (number 1210 . 1211) (punctuation 1209 . 1210) (symbol 1204 . 1209) (punctuation 1203 . 1204) (punctuation 1202 . 1203) (symbol 1199 . 1202) (punctuation 1197 . 1198) (punctuation 1183 . 1184) (symbol 1179 . 1183) (punctuation 1178 . 1179) (symbol 1173 . 1178) (punctuation 1172 . 1173) (symbol 1158 . 1172) (punctuation 1142 . 1143) (symbol 1133 . 1142) (TYPENAME 1124 . 1132) (punctuation 1122 . 1123) (symbol 1109 . 1122) (punctuation 1108 . 1109) (punctuation 1107 . 1108) (symbol 1104 . 1107) (punctuation 1102 . 1103) (symbol 1039 . 1044) (STRUCT 1032 . 1038) (punctuation 1030 . 1031) (symbol 1025 . 1029) (TYPENAME 1016 . 1024) (punctuation 1014 . 1015) (symbol 1009 . 1014) (TYPENAME 1000 . 1008) (punctuation 998 . 999) (TEMPLATE 990 . 998) (semantic-list 1968 . 1981) (symbol 1947 . 1968) (number 1969 . 1970) (TEMPLATE 1852 . 1860) (punctuation 1851 . 1852) (punctuation 1850 . 1851) (punctuation 1840 . 1841) (symbol 1835 . 1839) (punctuation 1834 . 1835) (punctuation 1833 . 1834) (punctuation 1832 . 1833) (symbol 1827 . 1832) (punctuation 1826 . 1827) (symbol 1823 . 1826) (TYPENAME 1814 . 1822) (punctuation 1812 . 1813) (symbol 1799 . 1812) (punctuation 1797 . 1798) (symbol 1784 . 1792) (STRUCT 1777 . 1783) (punctuation 1775 . 1776) (semantic-list 1764 . 1770) (symbol 1742 . 1764) (TYPENAME 1733 . 1741) (punctuation 1731 . 1732) (semantic-list 1719 . 1726) (symbol 1697 . 1719) (TYPENAME 1688 . 1696) (punctuation 1680 . 1681) (TEMPLATE 1672 . 1680) (punctuation 1669 . 1670) (semantic-list 1260 . 1669) (punctuation 1254 . 1255) (symbol 1249 . 1253) (punctuation 1248 . 1249) (punctuation 1247 . 1248) (punctuation 1246 . 1247) (punctuation 1232 . 1233) (punctuation 1231 . 1232) (symbol 1227 . 1231) (punctuation 1225 . 1226) (punctuation 1211 . 1212) (number 1210 . 1211) (punctuation 1209 . 1210) (symbol 1204 . 1209) (punctuation 1203 . 1204) (punctuation 1202 . 1203) (symbol 1199 . 1202) (punctuation 1197 . 1198) (punctuation 1183 . 1184) (symbol 1179 . 1183) (punctuation 1178 . 1179) (symbol 1173 . 1178) (punctuation 1172 . 1173) (symbol 1158 . 1172) (punctuation 1142 . 1143) (symbol 1133 . 1142) (TYPENAME 1124 . 1132) (punctuation 1122 . 1123) (symbol 1109 . 1122) (punctuation 1108 . 1109) (punctuation 1107 . 1108) (symbol 1104 . 1107) (punctuation 1102 . 1103) (symbol 1039 . 1044) (STRUCT 1032 . 1038) (punctuation 1030 . 1031) (symbol 1025 . 1029) (TYPENAME 1016 . 1024) (punctuation 1014 . 1015) (symbol 1009 . 1014) (TYPENAME 1000 . 1008) (punctuation 998 . 999) (TEMPLATE 990 . 998) (punctuation 961 . 962) (symbol 957 . 960) (TYPENAME 948 . 956) (punctuation 946 . 947) (TEMPLATE 938 . 946) (semantic-list 1968 . 1981) (symbol 1947 . 1968) (number 1969 . 1970) (TEMPLATE 1852 . 1860) (punctuation 1851 . 1852) (punctuation 1850 . 1851) (punctuation 1840 . 1841) (symbol 1835 . 1839) (punctuation 1834 . 1835) (punctuation 1833 . 1834) (punctuation 1832 . 1833) (symbol 1827 . 1832) (punctuation 1826 . 1827) (symbol 1823 . 1826) (TYPENAME 1814 . 1822) (punctuation 1812 . 1813) (symbol 1799 . 1812) (punctuation 1797 . 1798) (symbol 1784 . 1792) (STRUCT 1777 . 1783) (punctuation 1775 . 1776) (semantic-list 1764 . 1770) (symbol 1742 . 1764) (TYPENAME 1733 . 1741) (punctuation 1731 . 1732) (semantic-list 1719 . 1726) (symbol 1697 . 1719) (TYPENAME 1688 . 1696) (punctuation 1680 . 1681) (TEMPLATE 1672 . 1680) (punctuation 1669 . 1670) (semantic-list 1260 . 1669) (punctuation 1254 . 1255) (symbol 1249 . 1253) (punctuation 1248 . 1249) (punctuation 1247 . 1248) (punctuation 1246 . 1247) (punctuation 1232 . 1233) (punctuation 1231 . 1232) (symbol 1227 . 1231) (punctuation 1225 . 1226) (punctuation 1211 . 1212) (number 1210 . 1211) (punctuation 1209 . 1210) (symbol 1204 . 1209) (punctuation 1203 . 1204) (punctuation 1202 . 1203) (symbol 1199 . 1202) (punctuation 1197 . 1198) (punctuation 1183 . 1184) (symbol 1179 . 1183) (punctuation 1178 . 1179) (symbol 1173 . 1178) (punctuation 1172 . 1173) (symbol 1158 . 1172) (punctuation 1142 . 1143) (symbol 1133 . 1142) (TYPENAME 1124 . 1132) (punctuation 1122 . 1123) (symbol 1109 . 1122) (punctuation 1108 . 1109) (punctuation 1107 . 1108) (symbol 1104 . 1107) (punctuation 1102 . 1103) (symbol 1039 . 1044) (STRUCT 1032 . 1038) (punctuation 1030 . 1031) (symbol 1025 . 1029) (TYPENAME 1016 . 1024) (punctuation 1014 . 1015) (symbol 1009 . 1014) (TYPENAME 1000 . 1008) (punctuation 998 . 999) (TEMPLATE 990 . 998) (semantic-list 1968 . 1981) (symbol 1947 . 1968) (number 1969 . 1970) (TEMPLATE 1852 . 1860) (punctuation 1851 . 1852) (punctuation 1850 . 1851) (punctuation 1840 . 1841) (symbol 1835 . 1839) (punctuation 1834 . 1835) (punctuation 1833 . 1834) (punctuation 1832 . 1833) (symbol 1827 . 1832) (punctuation 1826 . 1827) (symbol 1823 . 1826) (TYPENAME 1814 . 1822) (punctuation 1812 . 1813) (symbol 1799 . 1812) (punctuation 1797 . 1798) (symbol 1784 . 1792) (STRUCT 1777 . 1783) (punctuation 1775 . 1776) (semantic-list 1764 . 1770) (symbol 1742 . 1764) (TYPENAME 1733 . 1741) (punctuation 1731 . 1732) (semantic-list 1719 . 1726) (symbol 1697 . 1719) (TYPENAME 1688 . 1696) (punctuation 1680 . 1681) (TEMPLATE 1672 . 1680) (punctuation 1669 . 1670) (semantic-list 1260 . 1669) (punctuation 1254 . 1255) (symbol 1249 . 1253) (punctuation 1248 . 1249) (punctuation 1247 . 1248) (punctuation 1246 . 1247) (punctuation 1232 . 1233) (punctuation 1231 . 1232) (symbol 1227 . 1231) (punctuation 1225 . 1226) (punctuation 1211 . 1212) (number 1210 . 1211) (punctuation 1209 . 1210) (symbol 1204 . 1209) (punctuation 1203 . 1204) (punctuation 1202 . 1203) (symbol 1199 . 1202) (punctuation 1197 . 1198) (punctuation 1183 . 1184) (symbol 1179 . 1183) (punctuation 1178 . 1179) (symbol 1173 . 1178) (punctuation 1172 . 1173) (symbol 1158 . 1172) (punctuation 1142 . 1143) (symbol 1133 . 1142) (TYPENAME 1124 . 1132) (punctuation 1122 . 1123) (symbol 1109 . 1122) (punctuation 1108 . 1109) (punctuation 1107 . 1108) (symbol 1104 . 1107) (punctuation 1102 . 1103) (symbol 1039 . 1044) (STRUCT 1032 . 1038) (punctuation 1030 . 1031) (symbol 1025 . 1029) (TYPENAME 1016 . 1024) (punctuation 1014 . 1015) (symbol 1009 . 1014) (TYPENAME 1000 . 1008) (punctuation 998 . 999) (TEMPLATE 990 . 998))
      :lexical-table 
        '(("BOOST_MPL_DISTANCE_HPP_INCLUDED")
          )
)
    (semanticdb-table "integral_c.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_INTEGRAL_C_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/integral_c_fwd.hpp" include (:system-flag t) nil [381 420])
            ("boost/mpl/aux_/config/ctps.hpp" include (:system-flag t) nil [421 462])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [463 515])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [516 563])
            ("AUX_WRAPPER_PARAMS" variable (:constant-flag t) nil [755 773])
            ("AUX_WRAPPER_NAME" variable (:constant-flag t) nil [809 825])
            ("AUX_WRAPPER_VALUE_TYPE" variable (:constant-flag t) nil [845 867])
            ("AUX_WRAPPER_INST" variable (:constant-flag t) nil [878 894])
            ("boost/mpl/aux_/integral_wrapper.hpp" include (:system-flag t) nil [931 977]))          
      :file "integral_c.hpp"
      :pointmax 1508
      :fsize 1507
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("AUX_WRAPPER_VALUE_TYPE" . ((symbol "T" 868 . 869)))
          ("AUX_WRAPPER_INST" (spp-arg-list ("value") 894 . 901) . 
              ((symbol "AUX_WRAPPER_NAME" 902 . 918) (punctuation "<" 918 . 919) (symbol "T" 920 . 921) (punctuation "," 921 . 922) (symbol "value" 923 . 928) (punctuation ">" 929 . 930)))
          ("AUX_WRAPPER_PARAMS" (spp-arg-list ("N") 773 . 776) . 
              ((TYPENAME "typename" 777 . 785) (symbol "T" 786 . 787) (punctuation "," 787 . 788) (symbol "T" 789 . 790) (symbol "N" 791 . 792)))
          ("BOOST_MPL_INTEGRAL_C_HPP_INCLUDED")
          ("AUX_WRAPPER_NAME" . ((symbol "integral_c" 826 . 836)))
          )
)
    (semanticdb-table "divides.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_DIVIDES_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [383 400])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [417 435])
            ("boost/mpl/aux_/arithmetic_op.hpp" include (:system-flag t) nil [438 481]))          
      :file "divides.hpp"
      :pointmax 524
      :fsize 523
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("AUX778076_OP_NAME" . ((symbol "divides" 401 . 408)))
          ("BOOST_MPL_DIVIDES_HPP_INCLUDED")
          ("AUX778076_OP_TOKEN" . ((punctuation "/" 436 . 437)))
          )
)
    (semanticdb-table "plus.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_PLUS_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [377 394])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [408 426])
            ("boost/mpl/aux_/arithmetic_op.hpp" include (:system-flag t) nil [429 472]))          
      :file "plus.hpp"
      :pointmax 512
      :fsize 511
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_PLUS_HPP_INCLUDED")
          ("AUX778076_OP_NAME" . ((symbol "plus" 395 . 399)))
          ("AUX778076_OP_TOKEN" . ((punctuation "+" 427 . 428)))
          )
)
    (semanticdb-table "void_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_VOID_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [377 418])
            ("void_" type
               (:prototype t
                :type "struct")
                nil [462 475]))          
      :file "void_fwd.hpp"
      :pointmax 600
      :fsize 599
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 549 . 556) (symbol 519 . 549) (symbol 477 . 518) (symbol 420 . 460))
      :lexical-table 
        '(("BOOST_MPL_VOID_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "has_xxx.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_HAS_XXX_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [445 474])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [475 512])
            ("boost/mpl/aux_/type_wrapper.hpp" include (:system-flag t) nil [513 555])
            ("boost/mpl/aux_/yes_no.hpp" include (:system-flag t) nil [556 592])
            ("boost/mpl/aux_/config/gcc.hpp" include (:system-flag t) nil [593 633])
            ("boost/mpl/aux_/config/has_xxx.hpp" include (:system-flag t) nil [634 678])
            ("boost/mpl/aux_/config/msvc_typename.hpp" include (:system-flag t) nil [679 729])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [730 771])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [772 824])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [825 872])
            ("boost/preprocessor/array/elem.hpp" include (:system-flag t) nil [874 918])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [919 956])
            ("boost/preprocessor/control/if.hpp" include (:system-flag t) nil [957 1001])
            ("boost/preprocessor/repetition/enum_params.hpp" include (:system-flag t) nil [1002 1058])
            ("boost/preprocessor/repetition/enum_trailing_params.hpp" include (:system-flag t) nil [1059 1124])
            ("BOOST_MPL_HAS_XXX_TRAIT_NAMED_DEF" variable (:constant-flag t) nil [7598 7631])
            ("BOOST_MPL_HAS_XXX_TRAIT_DEF" variable (:constant-flag t) nil [8774 8801])
            ("BOOST_MPL_HAS_XXX_NO_WRAPPED_TYPES" variable (:constant-flag t) nil [9456 9490])
            ("BOOST_MPL_HAS_XXX_NO_EXPLICIT_TEST_FUNCTION" variable (:constant-flag t) nil [9730 9773])
            ("BOOST_MPL_HAS_XXX_NEEDS_TEMPLATE_SFINAE" variable (:constant-flag t) nil [9986 10025])
            ("BOOST_MPL_HAS_MEMBER_INTROSPECTION_NAME" variable (:constant-flag t) nil [10253 10292])
            ("BOOST_MPL_HAS_MEMBER_INTROSPECTION_SUBSTITUTE_NAME" variable (:constant-flag t) nil [10387 10437])
            ("BOOST_MPL_HAS_MEMBER_INTROSPECTION_TEST_NAME" variable (:constant-flag t) nil [10552 10596])
            ("BOOST_MPL_HAS_MEMBER_MULTI_SUBSTITUTE" variable (:constant-flag t) nil [10931 10968])
            ("BOOST_MPL_HAS_MEMBER_SUBSTITUTE" variable (:constant-flag t) nil [11203 11234])
            ("BOOST_MPL_HAS_MEMBER_REJECT" variable (:constant-flag t) nil [11479 11506])
            ("BOOST_MPL_HAS_MEMBER_MULTI_ACCEPT" variable (:constant-flag t) nil [11939 11972])
            ("BOOST_MPL_HAS_MEMBER_ACCEPT" variable (:constant-flag t) nil [12382 12409])
            ("BOOST_MPL_HAS_MEMBER_TEST" variable (:constant-flag t) nil [12977 13002])
            ("BOOST_MPL_HAS_MEMBER_INTROSPECT" variable (:constant-flag t) nil [13803 13834])
            ("BOOST_MPL_HAS_MEMBER_IMPLEMENTATION" variable (:constant-flag t) nil [14386 14421])
            ("BOOST_MPL_HAS_MEMBER_WITH_FUNCTION_SFINAE" variable (:constant-flag t) nil [15240 15281])
            ("BOOST_MPL_HAS_XXX_TEMPLATE_NAMED_DEF" variable (:constant-flag t) nil [21058 21094])
            ("BOOST_MPL_HAS_XXX_TEMPLATE_DEF" variable (:constant-flag t) nil [21857 21887]))          
      :file "has_xxx.hpp"
      :pointmax 22053
      :fsize 22052
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_HAS_MEMBER_INTROSPECTION_TEST_NAME" (spp-arg-list ("args") 10596 . 10602) . ((symbol "BOOST_PP_CAT" 10611 . 10623) (semantic-list "(BOOST_PP_ARRAY_ELEM(0, args) , _test)" 10623 . 10661)))
          ("BOOST_MPL_HAS_MEMBER_ACCEPT" (spp-arg-list ("args" "member_macro") 12409 . 12429) . ((symbol "BOOST_PP_REPEAT" 12440 . 12455) (semantic-list "( \\
            BOOST_PP_ARRAY_ELEM(2, args) \\
          , BOOST_MPL_HAS_MEMBER_MULTI_ACCEPT \\
          , args \\
        )" 12455 . 12578)))
          ("BOOST_MPL_HAS_XXX_TEMPLATE_DEF" (spp-arg-list ("name") 21887 . 21893) . ((symbol "BOOST_MPL_HAS_XXX_TEMPLATE_NAMED_DEF" 21902 . 21938) (semantic-list "( \\
          BOOST_PP_CAT(has_, name), name, false \\
      )" 21938 . 21999)))
          ("BOOST_MPL_HAS_XXX_HPP_INCLUDED")
          ("BOOST_MPL_HAS_XXX_TRAIT_DEF" (spp-arg-list ("name") 8801 . 8807) . ((symbol "BOOST_MPL_HAS_XXX_TRAIT_NAMED_DEF" 8814 . 8847) (semantic-list "(BOOST_PP_CAT(has_,name), name, false)" 8847 . 8885)))
          ("BOOST_MPL_HAS_XXX_NO_WRAPPED_TYPES" . ((number "0" 9491 . 9492)))
          ("BOOST_MPL_HAS_MEMBER_MULTI_SUBSTITUTE" (spp-arg-list ("z" "n" "args") 10968 . 10980) . 
              ((TEMPLATE "template" 10989 . 10997) (punctuation "<" 10997 . 10998) (TEMPLATE "template" 11011 . 11019) (punctuation "<" 11019 . 11020) (symbol "BOOST_PP_ENUM_PARAMS" 11021 . 11041) (semantic-list "(BOOST_PP_INC(n), typename V)" 11041 . 11070) (punctuation ">" 11071 . 11072) (CLASS "class" 11073 . 11078) (symbol "V" 11079 . 11080) (punctuation ">" 11090 . 11091) (STRUCT "struct" 11100 . 11106) (symbol "BOOST_MPL_HAS_MEMBER_INTROSPECTION_SUBSTITUTE_NAME" 11107 . 11157) (semantic-list "(args, n)" 11157 . 11166) (semantic-list "{ \\
      }" 11167 . 11178) (punctuation ";" 11178 . 11179)))
          ("BOOST_MPL_HAS_MEMBER_WITH_FUNCTION_SFINAE" (spp-arg-list ("\\
" "args" "substitute_macro" "member_macro" "\\
") 15281 . 15351) . ((symbol "BOOST_MPL_HAS_MEMBER_IMPLEMENTATION" 15360 . 15395) (semantic-list "( \\
          args \\
        , BOOST_MPL_HAS_MEMBER_INTROSPECT \\
        , substitute_macro \\
        , member_macro \\
      )" 15395 . 15521)))
          ("BOOST_MPL_HAS_XXX_TEMPLATE_NAMED_DEF" (spp-arg-list ("trait" "name" "default_") 21094 . 21117) . ((symbol "BOOST_MPL_HAS_MEMBER_WITH_TEMPLATE_SFINAE" 21128 . 21169) (semantic-list "( \\
            ( 4, ( trait, name, BOOST_MPL_LIMIT_METAFUNCTION_ARITY, default_ ) ) \\
          , BOOST_MPL_HAS_MEMBER_TEMPLATE_SUBSTITUTE_PARAMETER \\
          , BOOST_MPL_HAS_MEMBER_TEMPLATE_ACCESS \\
        )" 21169 . 21381)))
          ("BOOST_MPL_HAS_XXX_NEEDS_TEMPLATE_SFINAE" . ((number "0" 10026 . 10027)))
          ("BOOST_MPL_HAS_MEMBER_SUBSTITUTE" (spp-arg-list ("args" "substitute_macro") 11234 . 11258) . ((symbol "BOOST_PP_REPEAT" 11267 . 11282) (semantic-list "( \\
          BOOST_PP_ARRAY_ELEM(2, args) \\
        , BOOST_MPL_HAS_MEMBER_MULTI_SUBSTITUTE \\
        , args \\
      )" 11282 . 11401)))
          ("BOOST_MPL_HAS_MEMBER_IMPLEMENTATION" (spp-arg-list ("\\
" "args" "introspect_macro" "substitute_macro" "member_macro" "\\
") 14421 . 14509) . 
              ((TEMPLATE "template" 14518 . 14526) (punctuation "<" 14526 . 14527) (TYPENAME "typename" 14540 . 14548) (symbol "T" 14549 . 14550) (punctuation "," 14561 . 14562) (TYPENAME "typename" 14563 . 14571) (symbol "fallback_" 14572 . 14581) (punctuation "=" 14598 . 14599) (symbol "boost" 14600 . 14605) (punctuation ":" 14605 . 14606) (punctuation ":" 14606 . 14607) (symbol "mpl" 14607 . 14610) (punctuation ":" 14610 . 14611) (punctuation ":" 14611 . 14612) (symbol "bool_" 14612 . 14617) (punctuation "<" 14617 . 14618) (symbol "BOOST_PP_ARRAY_ELEM" 14619 . 14638) (semantic-list "(3, args)" 14638 . 14647) (punctuation ">" 14648 . 14649) (punctuation ">" 14658 . 14659) (CLASS "class" 14668 . 14673) (symbol "BOOST_PP_ARRAY_ELEM" 14674 . 14693) (semantic-list "(0, args)" 14693 . 14702) (semantic-list "{ \\
          introspect_macro(args, substitute_macro, member_macro) \\
      public: \\
          static const bool value \\
              = BOOST_MPL_HAS_MEMBER_INTROSPECTION_NAME(args)< T >::value; \\
          typedef typename BOOST_MPL_HAS_MEMBER_INTROSPECTION_NAME(args)< \\
              T \\
          >::type type; \\
      }" 14703 . 15030) (punctuation ";" 15030 . 15031)))
          ("BOOST_MPL_HAS_MEMBER_INTROSPECTION_NAME" (spp-arg-list ("args") 10292 . 10298) . ((symbol "BOOST_PP_CAT" 10307 . 10319) (semantic-list "(BOOST_PP_ARRAY_ELEM(0, args) , _introspect)" 10319 . 10363)))
          ("BOOST_MPL_HAS_MEMBER_TEST" (spp-arg-list ("args") 13002 . 13008) . 
              ((SIZEOF "sizeof" 13021 . 13027) (semantic-list "(BOOST_MPL_HAS_MEMBER_INTROSPECTION_TEST_NAME(args)< U >(0))" 13027 . 13087) (punctuation "=" 13104 . 13105) (punctuation "=" 13105 . 13106) (SIZEOF "sizeof" 13107 . 13113) (semantic-list "(boost::mpl::aux::yes_tag)" 13113 . 13139)))
          ("BOOST_MPL_HAS_XXX_TRAIT_NAMED_DEF" (spp-arg-list ("trait" "name" "default_") 7631 . 7654) . 
              ((TEMPLATE "template" 7657 . 7665) (punctuation "<" 7665 . 7666) (TYPENAME "typename" 7667 . 7675) (symbol "T" 7676 . 7677) (punctuation "," 7677 . 7678) (TYPENAME "typename" 7679 . 7687) (symbol "fallback_" 7688 . 7697) (punctuation "=" 7698 . 7699) (symbol "boost" 7700 . 7705) (punctuation ":" 7705 . 7706) (punctuation ":" 7706 . 7707) (symbol "mpl" 7707 . 7710) (punctuation ":" 7710 . 7711) (punctuation ":" 7711 . 7712) (symbol "bool_" 7712 . 7717) (punctuation "<" 7717 . 7718) (symbol "default_" 7718 . 7726) (punctuation ">" 7726 . 7727) (punctuation ">" 7728 . 7729) (STRUCT "struct" 7732 . 7738) (symbol "trait" 7739 . 7744) (semantic-list "{ \\
    struct gcc_3_2_wknd \\
    { \\
        template< typename U > \\
        static boost::mpl::aux::yes_tag test( \\
              boost::mpl::aux::type_wrapper<U> const volatile* \\
            , boost::mpl::aux::type_wrapper<BOOST_MSVC_TYPENAME U::name>* = 0 \\
            ); \\
    \\
        static boost::mpl::aux::no_tag test(...); \\
    }; \\
    \\
    typedef boost::mpl::aux::type_wrapper<T> t_; \\
    BOOST_STATIC_CONSTANT(bool, value = \\
          sizeof(gcc_3_2_wknd::test(static_cast<t_*>(0))) \\
            == sizeof(boost::mpl::aux::yes_tag) \\
        ); \\
    typedef boost::mpl::bool_<value> type; \\
}" 7747 . 8363) (punctuation ";" 8363 . 8364)))
          ("BOOST_MPL_HAS_MEMBER_INTROSPECTION_SUBSTITUTE_NAME" (spp-arg-list ("args" "n") 10437 . 10446) . ((symbol "BOOST_PP_CAT" 10455 . 10467) (semantic-list "(BOOST_PP_CAT(BOOST_PP_ARRAY_ELEM(0, args) , _substitute), n)" 10467 . 10528)))
          ("BOOST_MPL_HAS_MEMBER_INTROSPECT" (spp-arg-list ("\\
" "args" "substitute_macro" "member_macro" "\\
") 13834 . 13904) . 
              ((TEMPLATE "template" 13913 . 13921) (punctuation "<" 13921 . 13922) (TYPENAME "typename" 13923 . 13931) (symbol "U" 13932 . 13933) (punctuation ">" 13934 . 13935) (STRUCT "struct" 13944 . 13950) (symbol "BOOST_MPL_HAS_MEMBER_INTROSPECTION_NAME" 13951 . 13990) (semantic-list "(args)" 13990 . 13996) (semantic-list "{ \\
          BOOST_MPL_HAS_MEMBER_SUBSTITUTE(args, substitute_macro) \\
          BOOST_MPL_HAS_MEMBER_REJECT(args, member_macro) \\
          BOOST_MPL_HAS_MEMBER_ACCEPT(args, member_macro) \\
          BOOST_STATIC_CONSTANT( \\
              bool, value = BOOST_MPL_HAS_MEMBER_TEST(args) \\
          ); \\
          typedef boost::mpl::bool_< value > type; \\
      }" 13997 . 14361) (punctuation ";" 14361 . 14362)))
          ("BOOST_MPL_HAS_XXX_NO_EXPLICIT_TEST_FUNCTION" . ((number "0" 9774 . 9775)))
          ("BOOST_MPL_HAS_MEMBER_REJECT" (spp-arg-list ("args" "member_macro") 11506 . 11526) . 
              ((TEMPLATE "template" 11537 . 11545) (punctuation "<" 11545 . 11546) (TYPENAME "typename" 11547 . 11555) (symbol "V" 11556 . 11557) (punctuation ">" 11558 . 11559) (STATIC "static" 11570 . 11576) (symbol "boost" 11577 . 11582) (punctuation ":" 11582 . 11583) (punctuation ":" 11583 . 11584) (symbol "mpl" 11584 . 11587) (punctuation ":" 11587 . 11588) (punctuation ":" 11588 . 11589) (symbol "aux" 11589 . 11592) (punctuation ":" 11592 . 11593) (punctuation ":" 11593 . 11594) (symbol "no_tag" 11594 . 11600) (symbol "BOOST_MPL_HAS_MEMBER_INTROSPECTION_TEST_NAME" 11611 . 11655) (semantic-list "(args)" 11655 . 11661) (semantic-list "(...)" 11661 . 11666) (punctuation ";" 11666 . 11667)))
          ("BOOST_MPL_HAS_MEMBER_MULTI_ACCEPT" (spp-arg-list ("z" "n" "args") 11972 . 11984) . 
              ((TEMPLATE "template" 11995 . 12003) (punctuation "<" 12003 . 12004) (TYPENAME "typename" 12005 . 12013) (symbol "V" 12014 . 12015) (punctuation ">" 12016 . 12017) (STATIC "static" 12028 . 12034) (symbol "boost" 12035 . 12040) (punctuation ":" 12040 . 12041) (punctuation ":" 12041 . 12042) (symbol "mpl" 12042 . 12045) (punctuation ":" 12045 . 12046) (punctuation ":" 12046 . 12047) (symbol "aux" 12047 . 12050) (punctuation ":" 12050 . 12051) (punctuation ":" 12051 . 12052) (symbol "yes_tag" 12052 . 12059) (symbol "BOOST_MPL_HAS_MEMBER_INTROSPECTION_TEST_NAME" 12070 . 12114) (semantic-list "(args)" 12114 . 12120) (semantic-list "( \\
            boost::mpl::aux::type_wrapper< V > const volatile* \\
          , BOOST_MPL_HAS_MEMBER_INTROSPECTION_SUBSTITUTE_NAME(args, n) < \\
                V::template BOOST_PP_ARRAY_ELEM(1, args) \\
            >* = 0 \\
        )" 12120 . 12354) (punctuation ";" 12354 . 12355)))
          )
)
    (semanticdb-table "begin_end_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_BEGIN_END_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("begin_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [422 465])
                            ("end_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [466 507])
                            ("begin" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [509 552])
                            ("end" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [553 594]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [405 597]))                  
                :type "namespace")
                nil [387 598]))          
      :file "begin_end_fwd.hpp"
      :pointmax 647
      :fsize 646
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_BEGIN_END_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "same_as.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_SAME_AS_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/not.hpp" include (:system-flag t) nil [375 403])
            ("boost/mpl/aux_/lambda_spec.hpp" include (:system-flag t) nil [404 445])
            ("boost/mpl/aux_/config/forwarding.hpp" include (:system-flag t) nil [446 493])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [495 535])
            ("boost" type
               (:members 
                  ( ("mpl" type (:type "namespace") (reparse-symbol namespacesubparts) [555 1125]))                  
                :type "namespace")
                nil [537 1125]))          
      :file "same_as.hpp"
      :pointmax 1125
      :fsize 1124
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 611 . 1082) (symbol 603 . 610) (STRUCT 596 . 602) (semantic-list 859 . 1081) (symbol 847 . 858) (STRUCT 840 . 846) (punctuation 1074 . 1075) (punctuation 1074 . 1075) (punctuation 838 . 839) (symbol 835 . 837) (TYPENAME 826 . 834) (punctuation 824 . 825) (TEMPLATE 816 . 824) (punctuation 1074 . 1075) (punctuation 1074 . 1075) (punctuation 810 . 811) (semantic-list 859 . 1081) (symbol 847 . 858) (STRUCT 840 . 846) (punctuation 1074 . 1075) (punctuation 1074 . 1075) (punctuation 838 . 839) (symbol 835 . 837) (TYPENAME 826 . 834) (punctuation 824 . 825) (TEMPLATE 816 . 824) (punctuation 1074 . 1075) (punctuation 1074 . 1075) (punctuation 810 . 811) (punctuation 594 . 595) (symbol 591 . 593) (TYPENAME 582 . 590) (punctuation 580 . 581) (TEMPLATE 572 . 580) (semantic-list 859 . 1081) (symbol 847 . 858) (STRUCT 840 . 846) (punctuation 1074 . 1075) (punctuation 1074 . 1075) (punctuation 838 . 839) (symbol 835 . 837) (TYPENAME 826 . 834) (punctuation 824 . 825) (TEMPLATE 816 . 824) (punctuation 1074 . 1075) (punctuation 1074 . 1075) (punctuation 810 . 811) (semantic-list 859 . 1081) (symbol 847 . 858) (STRUCT 840 . 846) (punctuation 1074 . 1075) (punctuation 1074 . 1075) (punctuation 838 . 839) (symbol 835 . 837) (TYPENAME 826 . 834) (punctuation 824 . 825) (TEMPLATE 816 . 824) (punctuation 1074 . 1075) (punctuation 1074 . 1075) (punctuation 810 . 811))
      :lexical-table 
        '(("BOOST_MPL_SAME_AS_HPP_INCLUDED")
          )
)
    (semanticdb-table "void.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_VOID_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/void_fwd.hpp" include (:system-flag t) nil [369 402])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [403 432])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [433 470])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [471 512])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [513 560])
            ("void_" type
               (:members 
                  ( ("type" type
                       (:typedef ("void_" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [872 891]))                  
                :type "struct")
                nil [857 894])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("is_void_" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("false_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [974 1103])
                            ("is_void_" type
                               (:type "struct"
                                :superclasses 
                                  ( ("true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("void_" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1105 1227])
                            ("is_not_void_" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1229 1360])
                            ("is_not_void_" type
                               (:type "struct"
                                :superclasses 
                                  ( ("false_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("void_" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1362 1490]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [957 1568]))                  
                :type "namespace")
                nil [939 1569]))          
      :file "void.hpp"
      :pointmax 1609
      :fsize 1608
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1548 . 1565) (symbol 1527 . 1548) (number 1549 . 1550) (semantic-list 1513 . 1526) (symbol 1492 . 1513) (number 1514 . 1515) (symbol 896 . 937) (symbol 562 . 602))
      :lexical-table 
        '(("BOOST_MPL_VOID_HPP_INCLUDED")
          )
)
    (semanticdb-table "next.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_NEXT_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/next_prior.hpp" include (:system-flag t) nil [364 399]))          
      :file "next.hpp"
      :pointmax 439
      :fsize 438
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_NEXT_HPP_INCLUDED")
          )
)
    (semanticdb-table "O1_size_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_O1_SIZE_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [53 87])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("O1_size_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [418 463])
                            ("O1_size" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [464 509]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [401 512]))                  
                :type "namespace")
                nil [383 513]))          
      :file "O1_size_fwd.hpp"
      :pointmax 560
      :fsize 559
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_O1_SIZE_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "next_prior.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_NEXT_PRIOR_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/aux_/common_name_wknd.hpp" include (:system-flag t) nil [381 427])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [428 465])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [466 510])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("next" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("T::next" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [698 728]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [680 776])
                            ("prior" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("T::prior" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [854 885]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [835 934]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [530 1001]))                  
                :type "namespace")
                nil [512 1002]))          
      :file "next_prior.hpp"
      :pointmax 1048
      :fsize 1047
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 988 . 998) (symbol 967 . 988) (number 989 . 990) (semantic-list 957 . 966) (symbol 936 . 957) (number 958 . 959) (semantic-list 918 . 931) (symbol 890 . 918) (semantic-list 927 . 930) (number 919 . 920) (punctuation 833 . 834) (semantic-list 825 . 828) (symbol 803 . 825) (TYPENAME 794 . 802) (punctuation 786 . 787) (TEMPLATE 778 . 786) (semantic-list 761 . 773) (symbol 733 . 761) (semantic-list 769 . 772) (number 762 . 763) (punctuation 678 . 679) (semantic-list 670 . 673) (symbol 648 . 670) (TYPENAME 639 . 647) (punctuation 631 . 632) (TEMPLATE 623 . 631) (semantic-list 614 . 621) (symbol 584 . 614) (semantic-list 577 . 583) (symbol 547 . 577))
      :lexical-table 
        '(("BOOST_MPL_NEXT_PRIOR_HPP_INCLUDED")
          )
)
    (semanticdb-table "bind_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_BIND_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [106 137])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [476 511])
            ("boost/mpl/aux_/config/bind.hpp" include (:system-flag t) nil [520 561])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [562 615])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [729 758])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [772 825]))          
      :file "bind_fwd.hpp"
      :pointmax 2494
      :fsize 2493
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 686 . 716) (symbol 679 . 686) (punctuation 678 . 679) (punctuation 676 . 677) (punctuation 675 . 676))
      :lexical-table 
        '(("BOOST_MPL_BIND_FWD_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "bind_fwd" 759 . 767) (punctuation "." 767 . 768) (symbol "hpp" 768 . 771)))
          )
)
    (semanticdb-table "quote.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_QUOTE_HPP_INCLUDED" variable (:constant-flag t) nil [103 131])
            ("boost/mpl/void.hpp" include (:system-flag t) nil [470 502])
            ("boost/mpl/aux_/has_type.hpp" include (:system-flag t) nil [503 544])
            ("boost/mpl/aux_/config/bcc.hpp" include (:system-flag t) nil [553 593])
            ("boost/mpl/aux_/config/ttp.hpp" include (:system-flag t) nil [594 634])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [954 1007])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1118 1147])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1158 1211]))          
      :file "quote.hpp"
      :pointmax 3635
      :fsize 3634
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1075 . 1105) (symbol 1068 . 1075) (punctuation 1067 . 1068) (punctuation 1065 . 1066) (punctuation 1064 . 1065))
      :lexical-table 
        '(("BOOST_MPL_QUOTE_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "quote" 1148 . 1153) (punctuation "." 1153 . 1154) (symbol "hpp" 1154 . 1157)))
          )
)
    (semanticdb-table "inserter.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_INSERTER_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("inserter" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil)
                                    ("Operation" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("state" type
                                       (:typedef ("Sequence" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [537 563])
                                    ("operation" type
                                       (:typedef ("Operation" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [568 598]))                                  )
                                (reparse-symbol namespacesubparts) [450 601]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [433 604]))                  
                :type "namespace")
                nil [415 605]))          
      :file "inserter.hpp"
      :pointmax 649
      :fsize 648
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_INSERTER_HPP_INCLUDED")
          )
)
    (semanticdb-table "push_front_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_PUSH_FRONT_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("push_front_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [424 472])
                            ("push_front" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [473 533]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [407 536]))                  
                :type "namespace")
                nil [389 537]))          
      :file "push_front_fwd.hpp"
      :pointmax 587
      :fsize 586
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_PUSH_FRONT_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "clear_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_CLEAR_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [51 83])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("clear_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [414 457])
                            ("clear" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [458 501]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [397 504]))                  
                :type "namespace")
                nil [379 505]))          
      :file "clear_fwd.hpp"
      :pointmax 550
      :fsize 549
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_CLEAR_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "advance_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_ADVANCE_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [53 87])
            ("boost/mpl/aux_/common_name_wknd.hpp" include (:system-flag t) nil [383 429])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("advance_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [507 552])
                            ("advance" type
                               (:template 
                                  ( ("Iterator" type (:type "class") nil nil)
                                    ("N" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [553 610]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [449 613]))                  
                :type "namespace")
                nil [431 614]))          
      :file "advance_fwd.hpp"
      :pointmax 661
      :fsize 660
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 496 . 505) (symbol 466 . 496))
      :lexical-table 
        '(("BOOST_MPL_ADVANCE_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "negate.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_NEGATE_HPP_INCLUDED" variable (:constant-flag t) nil [48 77])
            ("boost/mpl/integral_c.hpp" include (:system-flag t) nil [373 408])
            ("boost/mpl/aux_/msvc_eti_base.hpp" include (:system-flag t) nil [409 452])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [453 490])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [491 535])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [536 576])
            ("boost/mpl/aux_/config/integral.hpp" include (:system-flag t) nil [577 622])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [623 675])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("negate_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [712 756])
                            ("negate_tag" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("T::tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [805 834]))                                  )
                                (reparse-symbol namespacesubparts) [758 837])
                            ("apply::type" variable (:type "int") (reparse-symbol namespacesubparts) [1029 1248])
                            ("negate_impl" type
                               (:type "struct"
                                :template-specifier 
                                  ( ("integral_c_tag" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1497 1834]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [695 1837]))                  
                :type "namespace")
                nil [677 1838]))          
      :file "negate.hpp"
      :pointmax 1880
      :fsize 1879
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((punctuation 1830 . 1831) (semantic-list 1823 . 1830) (punctuation 1806 . 1807) (semantic-list 1794 . 1805) (punctuation 1792 . 1793) (symbol 1782 . 1792) (punctuation 1781 . 1782) (punctuation 1780 . 1781) (symbol 1779 . 1780) (TYPENAME 1770 . 1778) (punctuation 1768 . 1769) (symbol 1758 . 1768) (punctuation 1756 . 1757) (symbol 1742 . 1747) (STRUCT 1735 . 1741) (punctuation 1733 . 1734) (symbol 1731 . 1732) (TYPENAME 1722 . 1730) (punctuation 1720 . 1721) (TEMPLATE 1712 . 1720) (semantic-list 1271 . 1282) (symbol 1250 . 1271) (number 1272 . 1273) (TEMPLATE 1020 . 1028) (punctuation 1019 . 1020) (punctuation 1018 . 1019) (punctuation 1017 . 1018) (symbol 1004 . 1008) (punctuation 1003 . 1004) (punctuation 1002 . 1003) (punctuation 1001 . 1002) (symbol 1000 . 1001) (punctuation 999 . 1000) (symbol 989 . 999) (TYPENAME 980 . 988) (punctuation 968 . 969) (symbol 957 . 968) (punctuation 955 . 956) (symbol 903 . 909) (STRUCT 896 . 902) (punctuation 894 . 895) (semantic-list 886 . 889) (symbol 864 . 886) (TYPENAME 855 . 863) (punctuation 847 . 848) (TEMPLATE 839 . 847))
      :lexical-table 
        '(("BOOST_MPL_NEGATE_HPP_INCLUDED")
          )
)
    (semanticdb-table "tag.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_TAG_HPP_INCLUDED" variable (:constant-flag t) nil [45 71])
            ("boost/mpl/eval_if.hpp" include (:system-flag t) nil [362 394])
            ("boost/mpl/void.hpp" include (:system-flag t) nil [395 424])
            ("boost/mpl/aux_/has_tag.hpp" include (:system-flag t) nil [425 462])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [463 503])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("tag_impl" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T::tag" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [601 630]))                                          )
                                        (reparse-symbol namespacesubparts) [556 633]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [540 635]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [523 985]))                  
                :type "namespace")
                nil [505 1024]))          
      :file "tag.hpp"
      :pointmax 1024
      :fsize 1023
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 837 . 984) (symbol 832 . 836) (punctuation 831 . 832) (punctuation 830 . 831) (punctuation 829 . 830) (symbol 813 . 820) (punctuation 811 . 812) (punctuation 801 . 802) (symbol 800 . 801) (punctuation 799 . 800) (symbol 791 . 799) (punctuation 790 . 791) (punctuation 789 . 790) (symbol 786 . 789) (punctuation 784 . 785) (punctuation 774 . 775) (symbol 773 . 774) (punctuation 772 . 773) (symbol 765 . 772) (punctuation 764 . 765) (punctuation 763 . 764) (symbol 760 . 763) (punctuation 747 . 748) (symbol 744 . 747) (punctuation 742 . 743) (symbol 693 . 696) (STRUCT 686 . 692) (punctuation 980 . 981) (punctuation 980 . 981) (punctuation 684 . 685) (symbol 678 . 683) (punctuation 676 . 677) (symbol 668 . 675) (TYPENAME 659 . 667) (punctuation 657 . 658) (symbol 656 . 657) (TYPENAME 647 . 655) (punctuation 645 . 646) (TEMPLATE 637 . 645) (punctuation 980 . 981) (punctuation 980 . 981))
      :lexical-table 
        '(("BOOST_MPL_TAG_HPP_INCLUDED")
          )
)
    (semanticdb-table "distance_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_DISTANCE_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost/mpl/aux_/common_name_wknd.hpp" include (:system-flag t) nil [385 431])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("distance_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [510 556])
                            ("distance" type
                               (:template 
                                  ( ("First" type (:type "class") nil nil)
                                    ("Last" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [557 615]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [451 618]))                  
                :type "namespace")
                nil [433 619]))          
      :file "distance_fwd.hpp"
      :pointmax 667
      :fsize 666
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 498 . 508) (symbol 468 . 498))
      :lexical-table 
        '(("BOOST_MPL_DISTANCE_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "iter_fold.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_ITER_FOLD_HPP_INCLUDED" variable (:constant-flag t) nil [51 83])
            ("boost/mpl/begin_end.hpp" include (:system-flag t) nil [417 451])
            ("boost/mpl/O1_size.hpp" include (:system-flag t) nil [452 484])
            ("boost/mpl/lambda.hpp" include (:system-flag t) nil [485 516])
            ("boost/mpl/aux_/iter_fold_impl.hpp" include (:system-flag t) nil [517 561])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [562 599])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [600 644])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("iter_fold" type
                               (:members 
                                  ( ("type" variable (:type ("state" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1099 1110]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [839 1187]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [664 1227]))                  
                :type "namespace")
                nil [646 1228]))          
      :file "iter_fold.hpp"
      :pointmax 1273
      :fsize 1272
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1210 . 1224) (symbol 1189 . 1210) (number 1211 . 1212) (semantic-list 1144 . 1184) (symbol 1116 . 1144) (semantic-list 1157 . 1183) (number 1145 . 1146) (punctuation 1098 . 1099) (punctuation 1097 . 1098) (punctuation 1096 . 1097) (symbol 1083 . 1087) (punctuation 1082 . 1083) (punctuation 1081 . 1082) (punctuation 1080 . 1081) (symbol 1071 . 1080) (punctuation 1070 . 1071) (symbol 1064 . 1070) (TYPENAME 1055 . 1063) (punctuation 1053 . 1054) (symbol 1039 . 1044) (punctuation 1037 . 1038) (symbol 1024 . 1028) (punctuation 1023 . 1024) (punctuation 1022 . 1023) (punctuation 1021 . 1022) (symbol 1013 . 1021) (punctuation 1012 . 1013) (symbol 1009 . 1012) (TYPENAME 1000 . 1008) (punctuation 998 . 999) (symbol 985 . 989) (punctuation 984 . 985) (punctuation 983 . 984) (punctuation 982 . 983) (symbol 974 . 982) (punctuation 973 . 974) (symbol 968 . 973) (TYPENAME 959 . 967) (punctuation 957 . 958) (symbol 943 . 948) (punctuation 942 . 943) (punctuation 941 . 942) (punctuation 940 . 941) (symbol 932 . 940) (punctuation 931 . 932) (symbol 924 . 931) (punctuation 923 . 924) (punctuation 922 . 923) (symbol 919 . 922) (punctuation 918 . 919) (punctuation 917 . 918) (symbol 912 . 917) (punctuation 911 . 912) (punctuation 910 . 911) (punctuation 898 . 899) (symbol 884 . 898) (punctuation 883 . 884) (punctuation 882 . 883) (symbol 879 . 882) (TYPENAME 870 . 878) (TYPEDEF 862 . 869) (punctuation 837 . 838) (semantic-list 821 . 832) (symbol 799 . 821) (TYPENAME 790 . 798) (punctuation 788 . 789) (semantic-list 776 . 783) (symbol 754 . 776) (TYPENAME 745 . 753) (punctuation 743 . 744) (semantic-list 728 . 738) (symbol 706 . 728) (TYPENAME 697 . 705) (punctuation 689 . 690) (TEMPLATE 681 . 689))
      :lexical-table 
        '(("BOOST_MPL_ITER_FOLD_HPP_INCLUDED")
          )
)
    (semanticdb-table "iterator_range.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_ITERATOR_RANGE_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [389 426])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [427 471])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("iterator_range_tag" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [508 534])
                            ("iterator_range" type
                               (:members 
                                  ( ("tag" type
                                       (:typedef ("iterator_range_tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [669 700])
                                    ("type" type
                                       (:typedef ("iterator_range" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [705 733])
                                    ("begin" type
                                       (:typedef ("First" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [738 758])
                                    ("end" type
                                       (:typedef ("Last" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [763 780]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [641 848]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [491 893]))                  
                :type "namespace")
                nil [473 894]))          
      :file "iterator_range.hpp"
      :pointmax 944
      :fsize 943
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 871 . 890) (symbol 850 . 871) (number 872 . 873) (semantic-list 814 . 845) (symbol 786 . 814) (semantic-list 832 . 844) (number 815 . 816) (punctuation 639 . 640) (semantic-list 628 . 634) (symbol 606 . 628) (TYPENAME 597 . 605) (punctuation 595 . 596) (semantic-list 583 . 590) (symbol 561 . 583) (TYPENAME 552 . 560) (punctuation 544 . 545) (TEMPLATE 536 . 544))
      :lexical-table 
        '(("BOOST_MPL_ITERATOR_RANGE_HPP_INCLUDED")
          )
)
    (semanticdb-table "numeric_cast.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_NUMERIC_CAST_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [383 424])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [425 472])
            ("BOOST_MPL_AUX_NUMERIC_CAST" variable (:constant-flag t) nil [880 906])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("numeric_cast" type
                               (:template 
                                  ( ("SourceTag" type (:type "class") nil nil)
                                    ("TargetTag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("apply" type
                                       (:template 
                                          ( ("N" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol classsubparts) [1129 1165]))                                  )
                                (reparse-symbol namespacesubparts) [1038 1168]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [946 1171]))                  
                :type "namespace")
                nil [928 1172]))          
      :file "numeric_cast.hpp"
      :pointmax 1220
      :fsize 1219
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_NUMERIC_CAST" . ((symbol "numeric_cast" 907 . 919)))
          ("BOOST_MPL_NUMERIC_CAST_HPP_INCLUDED")
          )
)
    (semanticdb-table "integral_c_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_INTEGRAL_C_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [389 436])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [437 478])
            ("integral_c" type
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("T" type nil nil nil))                  
                :type "struct"
                :prototype t)
                nil [699 745]))          
      :file "integral_c_fwd.hpp"
      :pointmax 888
      :fsize 887
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 826 . 838) (symbol 796 . 826) (symbol 754 . 795) (symbol 480 . 520))
      :lexical-table 
        '(("BOOST_MPL_INTEGRAL_C_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "prior.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_PRIOR_HPP_INCLUDED" variable (:constant-flag t) nil [47 75])
            ("boost/mpl/next_prior.hpp" include (:system-flag t) nil [366 401]))          
      :file "prior.hpp"
      :pointmax 442
      :fsize 441
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_PRIOR_HPP_INCLUDED")
          )
)
    (semanticdb-table "size_t.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_SIZE_T_HPP_INCLUDED" variable (:constant-flag t) nil [48 77])
            ("boost/mpl/size_t_fwd.hpp" include (:system-flag t) nil [373 408])
            ("AUX_WRAPPER_VALUE_TYPE" variable (:constant-flag t) nil [418 440])
            ("AUX_WRAPPER_NAME" variable (:constant-flag t) nil [461 477])
            ("AUX_WRAPPER_PARAMS" variable (:constant-flag t) nil [493 511])
            ("boost/mpl/aux_/integral_wrapper.hpp" include (:system-flag t) nil [530 576]))          
      :file "size_t.hpp"
      :pointmax 618
      :fsize 617
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("AUX_WRAPPER_VALUE_TYPE" . 
              ((symbol "std" 441 . 444) (punctuation ":" 444 . 445) (punctuation ":" 445 . 446) (symbol "size_t" 446 . 452)))
          ("AUX_WRAPPER_PARAMS" (spp-arg-list ("N") 511 . 514) . 
              ((symbol "std" 515 . 518) (punctuation ":" 518 . 519) (punctuation ":" 519 . 520) (symbol "size_t" 520 . 526) (symbol "N" 527 . 528)))
          ("BOOST_MPL_SIZE_T_HPP_INCLUDED")
          ("AUX_WRAPPER_NAME" . ((symbol "size_t" 478 . 484)))
          )
)
    (semanticdb-table "size_t_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_SIZE_T_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [381 422])
            ("boost/config.hpp" include (:system-flag t) nil [423 450])
            ("cstddef" include (:system-flag t) nil [494 512])
            ("size_t" type
               (:template 
                  ( ("std::size_t" type nil nil nil))                  
                :type "struct"
                :prototype t)
                nil [556 596]))          
      :file "size_t_fwd.hpp"
      :pointmax 724
      :fsize 723
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 670 . 678) (symbol 640 . 670) (symbol 598 . 639) (symbol 514 . 554))
      :lexical-table 
        '(("BOOST_MPL_SIZE_T_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "empty_base.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_EMPTY_BASE_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [381 410])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [411 452])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [453 500])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [501 545])
            ("boost/type_traits/integral_constant.hpp" include (:system-flag t) nil [547 597])
            ("boost/type_traits/is_empty.hpp" include (:system-flag t) nil [598 639])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("empty_base" type (:type "struct") (reparse-symbol namespacesubparts) [858 879])
                            ("is_empty_base" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("false_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [881 1015])
                            ("is_empty_base" type
                               (:type "struct"
                                :superclasses 
                                  ( ("true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("empty_base" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1017 1149]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [659 1152]))                  
                :type "namespace")
                nil [641 1153])
            ("boost" type
               (:members 
                  ( ("public" label nil (reparse-symbol namespacesubparts) [1226 1234])
                    ("boost::integral_constant" variable (:type "int") (reparse-symbol namespacesubparts) [1235 1351]))                  
                :type "namespace")
                nil [1155 1354]))          
      :file "empty_base.hpp"
      :pointmax 1400
      :fsize 1399
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((punctuation 1234 . 1235) (punctuation 1224 . 1225) (punctuation 1218 . 1219) (symbol 1207 . 1217) (punctuation 1206 . 1207) (punctuation 1205 . 1206) (symbol 1202 . 1205) (punctuation 1200 . 1201) (symbol 1192 . 1200) (STRUCT 1185 . 1191) (punctuation 1183 . 1184) (punctuation 1182 . 1183) (TEMPLATE 1174 . 1182))
      :lexical-table 
        '(("BOOST_MPL_EMPTY_BASE_HPP_INCLUDED")
          )
)
    (semanticdb-table "minus.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_MINUS_HPP_INCLUDED" variable (:constant-flag t) nil [47 75])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [379 396])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [411 429])
            ("boost/mpl/aux_/arithmetic_op.hpp" include (:system-flag t) nil [432 475]))          
      :file "minus.hpp"
      :pointmax 516
      :fsize 515
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_MINUS_HPP_INCLUDED")
          ("AUX778076_OP_NAME" . ((symbol "minus" 397 . 402)))
          ("AUX778076_OP_TOKEN" . ((punctuation "-" 430 . 431)))
          )
)
    (semanticdb-table "multiplies.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_MULTIPLIES_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/times.hpp" include (:system-flag t) nil [381 411])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [412 449])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [450 494])
            ("boost/mpl/aux_/preprocessor/default_params.hpp" include (:system-flag t) nil [495 552])
            ("boost/mpl/aux_/preprocessor/params.hpp" include (:system-flag t) nil [553 602])
            ("boost/mpl/aux_/config/ctps.hpp" include (:system-flag t) nil [603 644])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("AUX778076_OP_ARITY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [793 811]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [710 1295]))                  
                :type "namespace")
                nil [692 1296]))          
      :file "multiplies.hpp"
      :pointmax 1342
      :fsize 1341
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 1233 . 1265) (symbol 1212 . 1233) (punctuation 1209 . 1210) (semantic-list 1055 . 1209) (punctuation 1053 . 1054) (semantic-list 1029 . 1052) (symbol 1010 . 1029) (punctuation 1008 . 1009) (symbol 1003 . 1008) (punctuation 1001 . 1002) (symbol 986 . 996) (STRUCT 979 . 985) (punctuation 977 . 978) (semantic-list 936 . 972) (symbol 909 . 936) (punctuation 901 . 902) (TEMPLATE 893 . 901))
      :lexical-table 
        '(("BOOST_MPL_MULTIPLIES_HPP_INCLUDED")
          )
)
    (semanticdb-table "is_sequence.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_IS_SEQUENCE_HPP_INCLUDED" variable (:constant-flag t) nil [53 87])
            ("boost/mpl/not.hpp" include (:system-flag t) nil [383 411])
            ("boost/mpl/and.hpp" include (:system-flag t) nil [412 440])
            ("boost/mpl/begin_end.hpp" include (:system-flag t) nil [441 475])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [476 503])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [504 533])
            ("boost/mpl/sequence_tag_fwd.hpp" include (:system-flag t) nil [534 575])
            ("boost/mpl/identity.hpp" include (:system-flag t) nil [576 609])
            ("boost/mpl/void.hpp" include (:system-flag t) nil [610 639])
            ("boost/mpl/aux_/has_tag.hpp" include (:system-flag t) nil [640 677])
            ("boost/mpl/aux_/has_begin.hpp" include (:system-flag t) nil [678 717])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [718 755])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [756 800])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [801 841])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [842 883])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [884 931])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [1117 1157])
            ("boost" type
               (:members 
                  ( ("mpl" type (:type "namespace") (reparse-symbol namespacesubparts) [1177 2597]))                  
                :type "namespace")
                nil [1159 2598]))          
      :file "is_sequence.hpp"
      :pointmax 2645
      :fsize 2644
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 2578 . 2594) (symbol 2550 . 2578) (number 2579 . 2580) (punctuation 2415 . 2416) (semantic-list 2358 . 2415) (punctuation 2356 . 2357) (punctuation 2354 . 2355) (symbol 2348 . 2353) (punctuation 2346 . 2347) (symbol 2342 . 2346) (punctuation 2341 . 2342) (punctuation 2340 . 2341) (punctuation 2339 . 2340) (symbol 2338 . 2339) (punctuation 2337 . 2338) (symbol 2332 . 2337) (TYPENAME 2323 . 2331) (punctuation 2321 . 2322) (symbol 2314 . 2321) (punctuation 2312 . 2313) (symbol 2308 . 2312) (punctuation 2306 . 2307) (symbol 2290 . 2301) (STRUCT 2283 . 2289) (punctuation 2281 . 2282) (semantic-list 2273 . 2276) (symbol 2251 . 2273) (TYPENAME 2242 . 2250) (punctuation 2234 . 2235) (TEMPLATE 2226 . 2234))
      :lexical-table 
        '(("BOOST_MPL_IS_SEQUENCE_HPP_INCLUDED")
          )
)
    (semanticdb-table "times.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_TIMES_HPP_INCLUDED" variable (:constant-flag t) nil [47 75])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [379 396])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [411 429])
            ("boost/mpl/aux_/arithmetic_op.hpp" include (:system-flag t) nil [432 475]))          
      :file "times.hpp"
      :pointmax 516
      :fsize 515
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("AUX778076_OP_NAME" . ((symbol "times" 397 . 402)))
          ("BOOST_MPL_TIMES_HPP_INCLUDED")
          ("AUX778076_OP_TOKEN" . ((punctuation "*" 430 . 431)))
          )
)
    (semanticdb-table "begin.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_BEGIN_HPP_INCLUDED" variable (:constant-flag t) nil [47 75])
            ("boost/mpl/begin_end.hpp" include (:system-flag t) nil [366 400]))          
      :file "begin.hpp"
      :pointmax 441
      :fsize 440
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_BEGIN_HPP_INCLUDED")
          )
)
    (semanticdb-table "iterator_tags.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_ITERATOR_TAG_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost/mpl/int.hpp" include (:system-flag t) nil [385 413])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("forward_iterator_tag" type
                               (:superclasses 
                                  ( ("int_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("type" type
                                       (:typedef ("forward_iterator_tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [496 530]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [450 533])
                            ("bidirectional_iterator_tag" type
                               (:superclasses 
                                  ( ("int_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("type" type
                                       (:typedef ("bidirectional_iterator_tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [580 620]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [534 623])
                            ("random_access_iterator_tag" type
                               (:superclasses 
                                  ( ("int_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("type" type
                                       (:typedef ("random_access_iterator_tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [670 710]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [624 713]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [433 716]))                  
                :type "namespace")
                nil [415 717]))          
      :file "iterator_tags.hpp"
      :pointmax 765
      :fsize 764
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_ITERATOR_TAG_HPP_INCLUDED")
          )
)
    (semanticdb-table "end.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_END_HPP_INCLUDED" variable (:constant-flag t) nil [45 71])
            ("boost/mpl/begin_end.hpp" include (:system-flag t) nil [362 396]))          
      :file "end.hpp"
      :pointmax 435
      :fsize 434
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_END_HPP_INCLUDED")
          )
)
    (semanticdb-table "front_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_FRONT_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [51 83])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("front_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [414 457])
                            ("front" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [458 501]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [397 504]))                  
                :type "namespace")
                nil [379 505]))          
      :file "front_fwd.hpp"
      :pointmax 550
      :fsize 549
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_FRONT_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "pop_front_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_POP_FRONT_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("pop_front_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [422 469])
                            ("pop_front" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [470 517]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [405 520]))                  
                :type "namespace")
                nil [387 521]))          
      :file "pop_front_fwd.hpp"
      :pointmax 570
      :fsize 569
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_POP_FRONT_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "pop_back_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_POP_BACK_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("pop_back_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [420 466])
                            ("pop_back" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [467 513]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [403 516]))                  
                :type "namespace")
                nil [385 517]))          
      :file "pop_back_fwd.hpp"
      :pointmax 565
      :fsize 564
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_POP_BACK_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "back_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_BACK_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("back_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [412 454])
                            ("back" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [455 497]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [395 500]))                  
                :type "namespace")
                nil [377 501]))          
      :file "back_fwd.hpp"
      :pointmax 545
      :fsize 544
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_BACK_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "empty_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_EMPTY_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [51 83])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("empty_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [414 457])
                            ("empty" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [458 501]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [397 504]))                  
                :type "namespace")
                nil [379 505]))          
      :file "empty_fwd.hpp"
      :pointmax 550
      :fsize 549
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_EMPTY_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "inherit.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MPL_INHERIT_HPP_INCLUDED" variable (:constant-flag t) nil [105 135])
            ("boost/mpl/empty_base.hpp" include (:system-flag t) nil [474 512])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [513 553])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [554 601])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [610 663])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [777 806])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [819 872]))          
      :file "inherit.hpp"
      :pointmax 5671
      :fsize 5670
      :lastmodtime '(22070 2372 0 0)
      :unmatched-syntax '((semantic-list 734 . 764) (symbol 727 . 734) (punctuation 726 . 727) (punctuation 724 . 725) (punctuation 723 . 724))
      :lexical-table 
        '(("BOOST_MPL_INHERIT_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "inherit" 807 . 814) (punctuation "." 814 . 815) (symbol "hpp" 815 . 818)))
          )
))
  :file "!usr!include!boost!mpl!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
